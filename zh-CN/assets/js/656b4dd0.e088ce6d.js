(self.webpackChunk=self.webpackChunk||[]).push([[6098],{3905:(e,t,a)=>{"use strict";a.d(t,{Zo:()=>c,kt:()=>d});var r=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=p(a),d=o,m=h["".concat(s,".").concat(d)]||h[d]||u[d]||n;return a?r.createElement(m,i(i({ref:t},c),{},{components:a})):r.createElement(m,i({ref:t},c))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,i=new Array(n);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<n;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},56018:(e,t,a)=>{"use strict";a.r(t),a.d(t,{frontMatter:()=>i,metadata:()=>l,toc:()=>s,default:()=>c});var r=a(22122),o=a(19756),n=(a(67294),a(3905)),i={id:"build-pdk",title:"\u5e73\u884c\u94fe\u5f00\u53d1\u5957\u4ef6 (PDKs)",sidebar_label:"\u5e73\u884c\u94fe\u5f00\u53d1\u5957\u4ef6 (PDKs)"},l={unversionedId:"build-pdk",id:"build-pdk",isDocsHomePage:!1,title:"\u5e73\u884c\u94fe\u5f00\u53d1\u5957\u4ef6 (PDKs)",description:"\u5e73\u884c\u94fe\u5f00\u53d1\u5de5\u5177\u5305(PDK)\u662f\u4e00\u5957\u4fbf\u4e8e\u5f00\u53d1\u8005\u521b\u5efa\u517c\u5bb9 Polkadot \u5e73\u884c\u94fe\u7684\u5de5\u5177\u3002",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/build-pdk.md",sourceDirName:".",slug:"/build-pdk",permalink:"/polkadot-wiki/zh-CN/docs/build-pdk",editUrl:"https://github.com/w3f/polkadot-wiki/edit/master/docs/build-pdk.md",version:"current",sidebar_label:"\u5e73\u884c\u94fe\u5f00\u53d1\u5957\u4ef6 (PDKs)",frontMatter:{id:"build-pdk",title:"\u5e73\u884c\u94fe\u5f00\u53d1\u5957\u4ef6 (PDKs)",sidebar_label:"\u5e73\u884c\u94fe\u5f00\u53d1\u5957\u4ef6 (PDKs)"},sidebar:"docs",previous:{title:"Polkadot \u958b\u767c\u8005\u5165\u95e8\u6307\u5357",permalink:"/polkadot-wiki/zh-CN/docs/build-build-with-polkadot"},next:{title:"Parachain Implementer's Guide",permalink:"/polkadot-wiki/zh-CN/docs/learn-implementers-guide"}},s=[{value:"\u4e3a\u4ec0\u4e48\u8981\u521b\u5efa\u5e73\u884c\u94fe\uff1f",id:"\u4e3a\u4ec0\u4e48\u8981\u521b\u5efa\u5e73\u884c\u94fe\uff1f",children:[]},{value:"\u4ec0\u4e48\u662f PDK\uff1f",id:"\u4ec0\u4e48\u662f-pdk\uff1f",children:[]},{value:"\u76ee\u524d\u5b58\u5728\u54ea\u4e9b PDK\uff1f",id:"\u76ee\u524d\u5b58\u5728\u54ea\u4e9b-pdk\uff1f",children:[]},{value:"\u521b\u5efa PDK",id:"\u521b\u5efa-pdk",children:[]}],p={toc:s};function c(e){var t=e.components,a=(0,o.Z)(e,["components"]);return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"\u5e73\u884c\u94fe\u5f00\u53d1\u5de5\u5177\u5305(PDK)\u662f\u4e00\u5957\u4fbf\u4e8e\u5f00\u53d1\u8005\u521b\u5efa\u517c\u5bb9",(0,n.kt)("a",{parentName:"p",href:"learn-parachains"}," Polkadot "),"\u5e73\u884c\u94fe\u7684\u5de5\u5177\u3002"),(0,n.kt)("h2",{id:"\u4e3a\u4ec0\u4e48\u8981\u521b\u5efa\u5e73\u884c\u94fe\uff1f"},"\u4e3a\u4ec0\u4e48\u8981\u521b\u5efa\u5e73\u884c\u94fe\uff1f"),(0,n.kt)("p",null,"\u5728\u6df1\u5165\u4e86\u89e3\u4ec0\u4e48\u662f PDK \u4ee5\u53ca\u5b83\u5982\u4f55\u4f7f\u7528\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b",(0,n.kt)("em",{parentName:"p"},"\u4e3a\u4ec0\u4e48"),"\u5f00\u53d1\u8005\u5e0c\u671b\u521b\u5efa\u5e73\u884c\u94fe\u5e76\u5c06\u5176\u8fde\u63a5\u5230 Polkadot \u4e2d\u3002"),(0,n.kt)("p",null,"\u5e73\u884c\u94fe\u62e5\u6709\u4e24\u4e2a\u5173\u952e\u7684\u9644\u52a0\u529f\u80fd\uff0c\u662f\u5f00\u53d1\u8005\u521b\u5efa\u72ec\u7acb\u94fe\u7684\u4e0d\u4e8c\u9009\u62e9\uff1a"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"\u5171\u4eab\u5b89\u5168\u6027")," - \u53bb\u9664\u4e86\u81ea\u4e3e\u94fe\u7684\u9a8c\u8bc1\u4eba\u96c6\u7684\u5fc5\u8981\u6027\u3002"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"\u8de8\u94fe\u901a\u4fe1")," - \u4f7f\u5f97\u5e73\u884c\u94fe\u4e4b\u95f4\u901a\u8fc7 ICMP \u534f\u8bae\u4ea4\u4e92\u64cd\u4f5c\u3002")),(0,n.kt)("p",null,"Parachains can ",(0,n.kt)("a",{parentName:"p",href:"learn-security"},"lease the security")," of the Polkadot network by bonding ",(0,n.kt)("a",{parentName:"p",href:"learn-DOT"},"DOT")," for a parachain slot. This means that the social costs of building a community around your project and convincing validators to participate in your network security are reduced. It is anticipated that Polkadot will have strong security, and decentralized application projects wishing to benefit from this security would want to become a parachain. For more information on the mechanic of leasing a parachain slot through a candle auction see ",(0,n.kt)("a",{parentName:"p",href:"learn-auction"},"here"),"."),(0,n.kt)("p",null,"\u6240\u6709\u53bb\u4e2d\u5fc3\u5316\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u94fe\uff0c\u82e5\u60f3\u8981\u5411\u5176\u5b83\u5df2\u8fde\u63a5\u5230 Polkadot \u7684\u5e73\u884c\u94fe\u53bb\u4fe1\u4efb\u5730\u4f20\u9012\u4fe1\u606f\uff0c\u90fd\u4f1a\u5e0c\u671b\u6210\u4e3a\u5e73\u884c\u94fe\u3002\u4e3b\u6743\u94fe\u4e4b\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\u9700\u501f\u52a9\u7ea6\u675f\u548c\u590d\u6742\u7684\u534f\u8bae\u624d\u53ef\u5e7f\u6cdb\u5b9e\u73b0\u3002\u5728 Polkadot \u4e2d\uff0c\u4e00\u65e6\u5c06\u5e94\u7528\u7a0b\u5e8f\u6784\u5efa\u4e3a\u5e73\u884c\u94fe\uff0c\u4fbf\u4f1a\u7acb\u5373\u83b7\u5f97\u8fd9\u4e00\u7279\u6027\u3002",(0,n.kt)("a",{parentName:"p",href:"learn-crosschain"},"XCMP \u534f\u8bae"),"\u5c06\u4f20\u9012\u5e73\u884c\u94fe\u4e4b\u95f4\u7684\u4fe1\u606f\uff0c\u5b9e\u73b0\u5176\u4e92\u64cd\u4f5c\u6027\u3002\u6b64\u5916\uff0c\u8fde\u63a5\u5176\u5b83\u94fe\u7684\u8f6c\u63a5\u6865(\u4f8b\u5982\u6bd4\u7279\u5e01\u6216\u4ee5\u592a\u574a)\u7eb7\u7eb7\u63a8\u51fa\uff0c\u5e73\u884c\u94fe\u4e5f\u53ef\u4ee5\u4e0e\u5b83\u4eec\u8fdb\u884c\u4ea4\u4e92\u3002"),(0,n.kt)("h2",{id:"\u4ec0\u4e48\u662f-pdk\uff1f"},"\u4ec0\u4e48\u662f PDK\uff1f"),(0,n.kt)("p",null,"\u5982\u4e0a\u6240\u8ff0\uff0cPDK \u662f\u4e00\u5957\u4fbf\u4e8e\u5f00\u53d1\u8005\u521b\u5efa\u517c\u5bb9 Polkadot \u7684\u5e73\u884c\u94fe\u7684\u5de5\u5177\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u610f\u5473\u7740 PDK \u5c06\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6210\u5206\uff1a"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"\u72b6\u6001\u8f6c\u53d8\u51fd\u6570(State transition function)")," - \u628a\u4f60\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u72b6\u6001\u72b6\u53d8\u6210\u53e6\u4e00\u4e2a\u72b6\u6001\u3002"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"\u6536\u96c6\u4eba\u8282\u70b9 (Collator node)")," - Polkadot \u7f51\u7edc\u7684\u53e6\u4e00\u7c7b\u70b9\u5bf9\u70b9\u8282\u70b9\uff0c\u4e13\u95e8\u8d1f\u8d23\u5e73\u884c\u94fe\u3002")),(0,n.kt)("p",null,"The state transition function (STF) can be any abstract way for an application to go from one state to another state. The only constraint that Polkadot places on this STF is that it must be easily verifiable -- usually though what we call a ",(0,n.kt)("em",{parentName:"p"},"witness")," or ",(0,n.kt)("em",{parentName:"p"},"proof"),". It must be so because the Relay Chain validators will need to check that each state it receives from the collator node is correct without actually running through the entire computation. Some examples of these proofs include the Proof-of-Validity blocks or zk-SNARKs, which require less computational resources to verify than they do to generate. The verification asymmetry in proof generation of the STF is one of the integral insights that allows Polkadot to scale while keeping high security guarantees."),(0,n.kt)("p",null,"A collator node is one of the types of network maintainers in the Polkadot protocol. They are responsible for ",(0,n.kt)("strong",{parentName:"p"},"keeping availability")," of the state of the parachain and the new states returned from iteration of the state transition function. They must remain online in order to keep track of the state and also of the XCMP messages that it will route between itself and other parachains. Collator nodes are responsible for passing the succinct proofs to the Relay Chain validators, and tracking the latest blocks from the Relay Chain. In essence, a collator node also acts as a light client for the Polkadot Relay Chain. For more on collator nodes see ",(0,n.kt)("a",{parentName:"p",href:"learn-collator"},"here"),"."),(0,n.kt)("h2",{id:"\u76ee\u524d\u5b58\u5728\u54ea\u4e9b-pdk\uff1f"},"\u76ee\u524d\u5b58\u5728\u54ea\u4e9b PDK\uff1f"),(0,n.kt)("p",null,"\u76ee\u524d\u552f\u4e00\u5b58\u5728\u7684 PDK \u662f Parity ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate"},"Substrate")," & ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/paritytech/cumulus"},"Cumulus"),"\u3002Substrate \u4f5c\u4e3a\u533a\u5757\u94fe\u6846\u67b6\uff0c\u63d0\u4f9b\u4e86\u533a\u5757\u94fe\u7684\u57fa\u672c\u6784\u5efa\u533a\u5757\uff08\u4f8b\u5982\u7f51\u7edc\u5c42\u3001\u5171\u8bc6\u548c Wasm \u89e3\u91ca\u5668\uff09\uff0c\u4ee5\u53ca\u521b\u5efa\u8fd0\u884c\u65f6\u7684\u76f4\u89c2\u65b9\u6cd5\u3002Substrate \u65e8\u5728\u7b80\u5316\u521b\u5efa\u65b0\u94fe\uff0c\u4f46\u5b83\u5e76\u4e0d\u76f4\u63a5\u652f\u6301 Polkadot \u517c\u5bb9\u6027\u3002\u56e0\u6b64 Cumulus \u9644\u52a0\u5e93\u5c06\u5305\u542b\u6240\u6709 Polkadot \u517c\u5bb9\u6027\u4ee3\u7801\u3002Cumulus \u76ee\u524d\u8fd8\u5728\u5f00\u53d1\u4e4b\u4e2d\uff0c\u8ba1\u5212\u505a\u5230\u53ea\u901a\u8fc7\u5bfc\u5165 crates \u4ee5\u53ca\u6dfb\u52a0\u4e00\u884c\u4ee3\u7801\u4fbf\u628a\u4f60\u7684 Substrate \u94fe\u53d8\u6210\u5e73\u884c\u94fe\u3002"),(0,n.kt)("p",null,"Substrate \u548c Cumulus \u901a\u8fc7\u533a\u5757\u94fe\u683c\u5f0f\u7684\u62bd\u8c61\u5316\u4e2d\u63d0\u4f9b PDK\uff0c\u4f46\u5e73\u884c\u94fe\u5b9e\u9645\u4e0a\u751a\u81f3\u4e0d\u5fc5\u662f\u533a\u5757\u94fe\u3002\u4f8b\u5982\u5e73\u884c\u94fe\u53ea\u9700\u6ee1\u8db3\u4e0a\u6587\u5217\u51fa\u7684\u4e24\u4e2a\u8981\u6c42\uff1a",(0,n.kt)("em",{parentName:"p"},"\u72b6\u6001\u8f6c\u6362\u51fd\u6570"),"\u548c",(0,n.kt)("em",{parentName:"p"},"\u6536\u96c6\u4eba\u8282\u70b9"),"\u3002\u5176\u5b83\u4e00\u5207\u529f\u80fd\u53d6\u51b3\u4e8e PDK \u7684\u5b9e\u73b0\u8005\u3002"),(0,n.kt)("p",null,"One interesting idea for a PDK that would be nice to see is to have a ",(0,n.kt)("a",{parentName:"p",href:"https://ethresear.ch/t/roll-up-roll-back-snark-side-chain-17000-tps/3675"},"roll-up")," kit that allowed developers to create snark-based parachains. If we review the roll-up write-up, we see that the system uses two roles: users that update ",(0,n.kt)("strong",{parentName:"p"},"state")," and an operator that ",(0,n.kt)("strong",{parentName:"p"},"aggregates the state updates")," into a single on-chain update. It should be straightforward to see how we can translate this to the parachain terms. The state transition function for a roll-up-like parachain would be updating the state (in practice, most likely a merkle tree, which would be easily verifiable) from the user inputs. The operator would act as the collator node, which would aggregate the state and create the zk-SNARK proof that it would hand to the Relay Chain validators for verification."),(0,n.kt)("h2",{id:"\u521b\u5efa-pdk"},"\u521b\u5efa PDK"),(0,n.kt)("p",null,"\u5982\u679c\u60a8\u6216\u60a8\u7684\u56e2\u961f\u5bf9\u5f00\u53d1 PDK \u611f\u5174\u8da3\uff0c\u8bf7\u968f\u65f6\u5728 ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/w3f/Web3-collaboration"},"W3F \u5408\u4f5c\u5e93")," \u4e0a\u521b\u5efa issue\u3002 Web3 \u57fa\u91d1\u4f1a\u53ef\u4ee5\u4e3a\u8fd9\u7c7b\u5de5\u4f5c\u63d0\u4f9b\u8d44\u52a9\u3002"))}c.isMDXComponent=!0}}]);