(self.webpackChunk=self.webpackChunk||[]).push([[9333],{3905:(e,t,a)=>{"use strict";a.d(t,{Zo:()=>c,kt:()=>h});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=d(a),h=s,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||r;return a?n.createElement(m,i(i({ref:t},c),{},{components:a})):n.createElement(m,i({ref:t},c))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,i=new Array(r);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},46689:(e,t,a)=>{"use strict";a.r(t),a.d(t,{frontMatter:()=>i,metadata:()=>o,toc:()=>l,default:()=>c});var n=a(22122),s=a(19756),r=(a(67294),a(3905)),i={id:"learn-accounts",title:"Polkadot \u8d26\u6237",sidebar_label:"Polkadot \u8d26\u6237",description:"\u8d26\u6237\u3001\u8d26\u6237\u7d22\u5f15\u3001\u8d26\u6237\u8eab\u4efd\u548c\u56de\u6536\u673a\u5236\u7684\u89e3\u91ca"},o={unversionedId:"learn-accounts",id:"learn-accounts",isDocsHomePage:!1,title:"Polkadot \u8d26\u6237",description:"\u8d26\u6237\u3001\u8d26\u6237\u7d22\u5f15\u3001\u8d26\u6237\u8eab\u4efd\u548c\u56de\u6536\u673a\u5236\u7684\u89e3\u91ca",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/learn-accounts.md",sourceDirName:".",slug:"/learn-accounts",permalink:"/polkadot-wiki/zh-CN/docs/learn-accounts",editUrl:"https://github.com/w3f/polkadot-wiki/edit/master/docs/learn-accounts.md",version:"current",sidebar_label:"Polkadot \u8d26\u6237",frontMatter:{id:"learn-accounts",title:"Polkadot \u8d26\u6237",sidebar_label:"Polkadot \u8d26\u6237",description:"\u8d26\u6237\u3001\u8d26\u6237\u7d22\u5f15\u3001\u8d26\u6237\u8eab\u4efd\u548c\u56de\u6536\u673a\u5236\u7684\u89e3\u91ca"},sidebar:"docs",previous:{title:"\u67b6\u6784",permalink:"/polkadot-wiki/zh-CN/docs/learn-architecture"},next:{title:"\u5f00\u59cb\u751f\u6210\u5e10\u6237",permalink:"/polkadot-wiki/zh-CN/docs/learn-account-generation"}},l=[{value:"\u5730\u5740\u683c\u5f0f",id:"\u5730\u5740\u683c\u5f0f",children:[]},{value:"\u5730\u5740\u7684\u751f\u6210\uff0c\u6d3e\u751f\u548c\u8fc1\u79fb",id:"\u5730\u5740\u7684\u751f\u6210\uff0c\u6d3e\u751f\u548c\u8fc1\u79fb",children:[{value:"\u52a9\u8bb0\u8bcd(\u79cd\u5b50) \u751f\u6210",id:"\u52a9\u8bb0\u8bcd\u79cd\u5b50-\u751f\u6210",children:[]},{value:"\u884d\u751f\u8def\u5f84",id:"\u884d\u751f\u8def\u5f84",children:[]},{value:"\u53ef\u79fb\u690d\u6027",id:"\u53ef\u79fb\u690d\u6027",children:[]},{value:"\u597d\u5947\uff1a\u524d\u7f00\u7684\u5de5\u4f5c\u539f\u7406",id:"\u597d\u5947\uff1a\u524d\u7f00\u7684\u5de5\u4f5c\u539f\u7406",children:[]}]},{value:"\u83b7\u53d6\u548c\u7ba1\u7406\u5730\u5740",id:"\u83b7\u53d6\u548c\u7ba1\u7406\u5730\u5740",children:[]},{value:"\u4f59\u989d\u7c7b\u578b",id:"\u4f59\u989d\u7c7b\u578b",children:[]},{value:"\u73b0\u6709\u5b58\u6b3e\u548c\u56de\u6536",id:"\u73b0\u6709\u5b58\u6b3e\u548c\u56de\u6536",children:[]},{value:"\u7d22\u5f15",id:"\u7d22\u5f15",children:[]},{value:"\u8eab\u4efd",id:"\u8eab\u4efd",children:[]},{value:"\u4ee3\u7406\u8d26\u6237",id:"\u4ee3\u7406\u8d26\u6237",children:[]},{value:"\u591a\u7b7e\u540d\u8d26\u6237",id:"\u591a\u7b7e\u540d\u8d26\u6237",children:[{value:"\u751f\u6210\u591a\u91cd\u7b7e\u540d\u5e10\u6237\u7684\u5730\u5740",id:"\u751f\u6210\u591a\u91cd\u7b7e\u540d\u5e10\u6237\u7684\u5730\u5740",children:[]},{value:"\u4f7f\u7528\u591a\u91cd\u7b7e\u540d\u5e10\u6237\u8fdb\u884c\u4ea4\u6613",id:"\u4f7f\u7528\u591a\u91cd\u7b7e\u540d\u5e10\u6237\u8fdb\u884c\u4ea4\u6613",children:[]},{value:"Example with Polkadot.JS",id:"example-with-polkadotjs",children:[]}]},{value:"Address Conversion Tools",id:"address-conversion-tools",children:[{value:"How to Verify a Public Key&#39;s Associated Address",id:"how-to-verify-a-public-keys-associated-address",children:[]}]},{value:"\u8d44\u6e90",id:"\u8d44\u6e90",children:[]}],d={toc:l};function c(e){var t=e.components,i=(0,s.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u672c\u6587\u6863\u6db5\u76d6 Polkadot \u548c Kusama \u8d26\u6237\u7684\u57fa\u672c\u5730\u5740\u53ca\u5176\u5728\u94fe\u4e0a\u7684\u4fdd\u5b58\u3002 \u6b32\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u52a0\u5bc6\u6280\u672f\u80cc\u540e\u7684\u8be6\u7ec6\u89e3\u91ca\uff0c\u8bf7\u53c2\u9605 ",(0,r.kt)("a",{parentName:"p",href:"learn-cryptography"},"\u52a0\u5bc6\u9875\u9762"),"\u3002"),(0,r.kt)("h2",{id:"\u5730\u5740\u683c\u5f0f"},"\u5730\u5740\u683c\u5f0f"),(0,r.kt)("p",null,"\u57fa\u4e8e Substrate \u7684\u94fe\u7684\u5730\u5740\u683c\u5f0f\u662fSS58\u3002SS58 \u662f\u4e00\u79cd\u5bf9\u4e8e\u6bd4\u7279\u5e01\u7684 Base-58-Check \u8fdb\u884c\u5c0f\u5e45\u4fee\u6539\u7684\u683c\u5f0f\u3002\u9700\u8981\u6ce8\u610f\uff0c\u6b64\u683c\u5f0f\u5305\u542b",(0,r.kt)("em",{parentName:"p"},"\u5730\u5740\u7c7b\u578b"),"\u524d\u7f00\uff0c\u53ef\u4ee5\u8bc6\u522b\u5730\u5740\u5177\u4f53\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u7f51\u7edc\u3002"),(0,r.kt)("p",null,"\u4f8b\u5982:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Polkadot \u5730\u5740\u603b\u662f\u4ee5\u6570\u5b571\u5f00\u5934\u3002"),(0,r.kt)("li",{parentName:"ul"},"Kusama \u5730\u5740\u603b\u662f\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5982C\u3001D\u3001F\u3001G\u3001H\u3001J..."),(0,r.kt)("li",{parentName:"ul"},"\u901a\u7528Substrate \u5730\u5740\u4ee55\u5f00\u5934\u3002")),(0,r.kt)("p",null,"\u8fd9\u4e9b\u524d\u7f00\u5728",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/wiki/External-Address-Format-(SS58)"},"\u6b64\u5904"),"\u5b9a\u4e49\u3002"),(0,r.kt)("p",null,"It's important to understand that the different formats for different networks are ",(0,r.kt)("strong",{parentName:"p"},"merely different representations of the same public key in a private-public keypair")," generated by an address generation tool. This makes the addresses compatible across Substrate-based chains as long as you convert the format."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Many wallets allow you to convert between formats. Stand-alone tools exist as well, you can find them in the ",(0,r.kt)("a",{parentName:"p",href:"#address-conversion-tools"},"address coversion tools")," section.")),(0,r.kt)("h2",{id:"\u5730\u5740\u7684\u751f\u6210\uff0c\u6d3e\u751f\u548c\u8fc1\u79fb"},"\u5730\u5740\u7684\u751f\u6210\uff0c\u6d3e\u751f\u548c\u8fc1\u79fb"),(0,r.kt)("p",null,"\u4e00\u4e2a\u6709\u6548\u7684\u8d26\u6237\u53ea\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u5728",(0,r.kt)("a",{parentName:"p",href:"build-protocol-info#cryptography"},"supported curves and signature scheme"),"\u7b7e\u540d\u7684\u79c1\u94a5\u3002\u591a\u6570\u94b1\u5305\u7136\u95f4\u4ece\u52a9\u8bb0\u8bcd\u5230\u751f\u6210\u8d26\u6237\u9700\u8981\u7ecf\u7531\u8bb8\u591a\u6b65\u9aa4\u3002\u540c\u4e00\u7ec4\u52a9\u8bb0\u8bcd\uff0c\u4e0d\u540c\u94b1\u5305\u91c7\u7528\u4e0d\u540c\u6b65\u9aa4\u751f\u6210\u7684\u8d26\u6237\u4e5f\u4e0d\u4f1a\u76f8\u540c\u3002"),(0,r.kt)("h3",{id:"\u52a9\u8bb0\u8bcd\u79cd\u5b50-\u751f\u6210"},"\u52a9\u8bb0\u8bcd(\u79cd\u5b50) \u751f\u6210"),(0,r.kt)("p",null,"Most wallets generate a mnemonic phrase for users to back up their wallets and generate a private key from the mnemonic. Not all wallets use the same algorithm to convert from mnemonic phrase to private key."),(0,r.kt)("p",null,"\u57fa\u4e8e Subkey \u548c Polkadot-JS \u7684\u94b1\u5305\u91c7\u7528BIP39\u8bcd\u5178\u6765\u751f\u6210\u52a9\u8bb0\u8bcd\uff0c\u4f7f\u7528\u71b5\u5b57\u8282\u6570\u7ec4\u6765\u751f\u6210\u79c1\u94a5\uff0c\u8fd9\u6709\u522b\u4e8e\u5176\u4ed6 BIP39 \u94b1\u5305\u8f6f\u4ef6(\u5982Ledger)\u91c7\u7528 PBKDF2\u3002\u6240\u4ee5\uff0c\u540c\u4e00\u7ec4\u52a9\u8bb0\u8bcd\u5728\u7ecf\u7531\u8fd9\u4e24\u79cd\u7b97\u6cd5\u540e\u5e76\u4e0d\u80fd\u4ea7\u751f\u540c\u6837\u7684\u79c1\u94a5\u3002\u66f4\u591a\u76f8\u5173\u7ec6\u8282\u8bf7\u53c2\u9605",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate-bip39"},"Substrate BIP39")),(0,r.kt)("h3",{id:"\u884d\u751f\u8def\u5f84"},"\u884d\u751f\u8def\u5f84"),(0,r.kt)("p",null,"\u8bb8\u591a Polkadot \u5bc6\u94a5\u751f\u6210\u5de5\u5177\u652f\u6301\u786c\u6d3e\u548c\u8f6f\u6d3e\u751f\u3002\u66f4\u591a\u5173\u4e8e\u6d3e\u751f\u8def\u5f84\u7684\u7ec6\u8282\u548c\u4f8b\u5b50\u8bf7\u53c2\u8003 ","[Subkey \u6587\u6863]","(",(0,r.kt)("a",{parentName:"p",href:"https://substrate."},"https://substrate.")," dev/docs/en/knowledgebase/integrate/subkey) \u3002Polkadot-JS \u7684\u5e94\u7528\u548c\u62d3\u5c55\u540c Parity Signer \u4e5f\u652f\u6301\u91c7\u7528\u548c Subkey \u76f8\u540c\u8bed\u6cd5\u7684\u81ea\u5b9a\u4e49\u6d3e\u751f\u8def\u5f84\u3002"),(0,r.kt)("p",null,"\u4e00\u4e9b\u94b1\u5305\u4f1a\u81ea\u52a8\u5c06\u6d3e\u751f\u8def\u5f84\u6dfb\u52a0\u5230\u751f\u6210\u7684\u52a9\u8bb0\u8bcd\u77ed\u8bed\u7684\u672b\u5c3e\u3002\u8fd9\u5c06\u4e3a\u5355\u72ec\u7684\u8def\u5f84\u751f\u6210\u5355\u72ec\u7684\u79cd\u5b50\uff0c\u4ece\u800c\u5141\u8bb8\u4f7f\u7528\u76f8\u540c\u7684\u52a9\u8bb0\u7b26\uff0c\u4f8b\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"<mnemonic phrase>//Polkadot")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"<mnemonic phrase>//Kusama"),"\u3002\u5c3d\u7ba1\u60a8\u53ef\u4ee5\u6b63\u786e\u4fdd\u5b58\u52a9\u8bb0\u8bcd\u77ed\u8bed\uff0c\u4f46\u9664\u975e\u5728\u4e24\u4e2a\u94b1\u5305\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u6d3e\u751f\u8def\u5f84\uff0c\u5426\u5219\u5728\u53e6\u4e00\u4e2a\u94b1\u5305\u4e2d\u4f7f\u7528\u5b83\u5c06\u4e0d\u4f1a\u751f\u6210\u76f8\u540c\u7684\u5730\u5740\u3002"),(0,r.kt)("p",null,"Polkadot \u548c Kusama \u90fd\u5728",(0,r.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md"},"BIP44\u6ce8\u518c\u8868"),"\u4e2d\u6ce8\u518c\u4e86\u8def\u5f84\u3002"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Warning:")," You must have both the parent private key as well as the derivation path to arrive at the key for an address. Do not use custom derivation paths unless you are comfortable with your understanding of this topic.")),(0,r.kt)("h3",{id:"\u53ef\u79fb\u690d\u6027"},"\u53ef\u79fb\u690d\u6027"),(0,r.kt)("p",null,"\u4ee5\u4e0a\u4fe1\u606f\u4e3a\u6211\u4eec\u5e26\u6765\u4e86\u53ef\u79fb\u690d\u6027\uff1a\u5728\u591a\u4e2a\u94b1\u5305\u4e2d\u4f7f\u7528\u52a9\u8bb0\u8bcd\u6216\u79cd\u5b50\u7684\u80fd\u529b\u3002\u53ef\u79fb\u690d\u6027\u53d6\u51b3\u4e8e\u8bb8\u591a\u56e0\u7d20\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6d3e\u751f\u8def\u5f84"),(0,r.kt)("li",{parentName:"ul"},"\u52a9\u8bb0\u7b26\u683c\u5f0f"),(0,r.kt)("li",{parentName:"ul"},"\u79cd\u5b50\u884d\u751f"),(0,r.kt)("li",{parentName:"ul"},"\u7b7e\u540d\u65b9\u6848")),(0,r.kt)("p",null,"\u5982\u679c\u8981\u5728\u591a\u4e2a\u94b1\u5305\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u52a9\u8bb0\u7b26\uff0c\u8bf7\u786e\u4fdd\u5b83\u4eec\u9075\u5faa\u517c\u5bb9\u751f\u6210\u5bc6\u94a5\u548c\u7b7e\u540d\u6d88\u606f\u7684\u65b9\u6cd5\u3002\u5982\u679c\u627e\u4e0d\u5230\u53ef\u7406\u89e3\u7684\u6587\u6863\uff0c\u8bf7\u4e0e\u9879\u76ee\u7ef4\u62a4\u4eba\u5458\u8054\u7cfb\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"center"},"\u52a9\u8bb0\u7b26\u683c\u5f0f"),(0,r.kt)("th",{parentName:"tr",align:"center"},"\u6d3e\u751f\u8def\u5f84"),(0,r.kt)("th",{parentName:"tr",align:"center"},"\u79cd\u5b50\u884d\u751f"),(0,r.kt)("th",{parentName:"tr",align:"center"},"\u7b7e\u540d\u652f\u6301"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Polkadot{.js} \u6269\u5c55"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u6807\u51c6"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u7528\u6237\u81ea\u5b9a\u4e49"),(0,r.kt)("td",{parentName:"tr",align:"center"},"BIP32"),(0,r.kt)("td",{parentName:"tr",align:"center"},"sr25519")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Polkadot-JS \u5e94\u7528\u7a0b\u5e8f"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u6807\u51c6","*"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u7528\u6237\u81ea\u5b9a\u4e49"),(0,r.kt)("td",{parentName:"tr",align:"center"},"BIP32"),(0,r.kt)("td",{parentName:"tr",align:"center"},"sr25519, ed25519, secp256k")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8d26\u672c"),(0,r.kt)("td",{parentName:"tr",align:"center"},"BIP39"),(0,r.kt)("td",{parentName:"tr",align:"center"},"BIP44","\u2020"),(0,r.kt)("td",{parentName:"tr",align:"center"},"BIP32","\u2021"),(0,r.kt)("td",{parentName:"tr",align:"center"},"ed25519","\xa7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Subkey"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u6807\u51c6","*"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u7528\u6237\u81ea\u5b9a\u4e49"),(0,r.kt)("td",{parentName:"tr",align:"center"},"BIP32"),(0,r.kt)("td",{parentName:"tr",align:"center"},"sr25519, ed25519, secp256k1")))),(0,r.kt)("p",null,"\\ * \u9644\u5e26 BIP39 \u7684 Ed25519 \u5bc6\u94a5\u5177\u6709",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate-bip39"},"\u6709\u9650\u7684\u517c\u5bb9\u6027"),"\u3002"),(0,r.kt)("p",null,"\u2020"," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md"},"BIP44 \u6ce8\u518c\u8868")),(0,r.kt)("p",null,"\u2021"," \u57fa\u4e8e",(0,r.kt)("a",{parentName:"p",href:"https://github.com/LedgerHQ/orakolo/blob/master/papers/Ed25519_BIP%20Final.pdf"},"Khovratovich"),"\u7684 Ed25519 \u548c BIP32"),(0,r.kt)("p",null,"\xa7"," Sr25519 \u8ba1\u5212"),(0,r.kt)("h3",{id:"\u597d\u5947\uff1a\u524d\u7f00\u7684\u5de5\u4f5c\u539f\u7406"},"\u597d\u5947\uff1a\u524d\u7f00\u7684\u5de5\u4f5c\u539f\u7406"),(0,r.kt)("p",null,"\u8fd9\u662f",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/wiki/External-Address-Format-(SS58)"}," SS58 \u6587\u6863"),"\u7684\u7533\u660e\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Polkadot \u7684\u5730\u5740\u7c7b\u578b\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"000000000"),"\uff0c\u6240\u4ee5",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"\u662f\u5341\u8fdb\u5236\u3002"),(0,r.kt)("li",{parentName:"ul"},"Kusama (Polkadot \u91d1\u4e1d\u96c0) \u7684\u5730\u5740\u7c7b\u578b\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"00000010b"),"\uff0c\u56e0\u6b64",(0,r.kt)("inlineCode",{parentName:"li"},"2"),"\u4ee5\u5341\u8fdb\u5236\u8868\u793a\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u901a\u7528 Substrate \u7684\u5730\u5740\u7c7b\u578b\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"00101010b"),"\uff0c\u5341\u8fdb\u5236\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"42"),"\u3002")),(0,r.kt)("p",null,"\u56e0\u4e3a Base58-check \u5b57\u6bcd\u6ca1\u6709\u6570\u5b570\uff0c\u6240\u4ee5\u6700\u5c0f\u503c\u786e\u5b9e\u662f1\u3002\u56e0\u6b64\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"00000000b"),"\u5728 Base58 \u4e2d\u662f1\u3002\u5982\u679c\u6211\u4eec\u5c1d\u8bd5",(0,r.kt)("a",{parentName:"p",href:"https://www.better-converter.com/Encoders-Decoders/Base58Check-to-Hexadecimal-Decoder"},"\u89e3\u7801"),"\u8bf8\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"1FRMM8PEiWXYax7rpS6X4XZX1aAAxSWx1CrKTyrVYhV24fg"),"\u7684Polkadot\u5730\u5740\uff0c\u5219\u7ed3\u679c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"}," 000aff6865635ae11013a83835c019d44ec3f865145943f487ae82a8b7e7bed"),"\u3002\u7b2c\u4e00\u4e2a\u5b57\u8282\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"00"),"\uff0c\u5b9e\u9645\u4e0a\u65e2\u662f\u4e8c\u8fdb\u5236\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"00000000"),"\u53c8\u662f\u5341\u8fdb\u5236\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"0"),"\uff0c\u56e0\u6b64\u5b83\u4e0e Polkadot \u7684\u5730\u5740\u7c7b\u578b\u5339\u914d\u3002"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b Substrate \u7684\u5730\u5740\u3002\u5982\u679c\u6211\u4eec\u89e3\u7801",(0,r.kt)("inlineCode",{parentName:"p"}," 5CK8D1sKNwF473wbuBP6NuhQfPaWUetNsWUNAAzVwTfxqjfr"),"\uff0c\u5219\u4f1a\u5f97\u5230",(0,r.kt)("inlineCode",{parentName:"p"}," 2a0aff6865635ae11013a83835c019d44ec3f865145943f487ae82a8e7bed3a66b77e5"),"\u3002\u7b2c\u4e00\u4e2a\u5b57\u8282\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"2a"),"\uff0c\u5f53",(0,r.kt)("a",{parentName:"p",href:"https://www.rapidtables.com/convert/number/hex-to-decimal.html"},"\u4ece\u5341\u516d\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236"),"\u65f6\u662f42\u300242\u7684\u4e8c\u8fdb\u5236\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"00101010"),"\uff0c\u5c31\u50cf SS58 \u6587\u6863\u6240\u8ff0\u7684\u90a3\u6837\u3002"),(0,r.kt)("p",null,"\u6700\u540e\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b Kusama \u7684\u5730\u5740\u3002\u89e3\u7801",(0,r.kt)("inlineCode",{parentName:"p"}," CpjsLDC1JFyrhm3ftC9Gs4QoyrkHKhZKtK7YqGTRFtTafgp"),"\u4f1a\u8ba9\u6211\u4eec\u5f97\u5230",(0,r.kt)("inlineCode",{parentName:"p"}," 020aff6865635ae11013a83835c019d44ec3f865145943f487ae82a8e7bed3a66b0985"),"\uff0c\u6b63\u5982\u88ab\u6307\u5b9a\u7684\u90a3\u6837\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u8282\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"02"),"\u3002\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u4ee5\u5b8c\u5168\u4e0d\u540c\u7684\u5b57\u6bcd\uff0c\u4f8b\u5982",(0,r.kt)("inlineCode",{parentName:"p"}," J4iggBtsWsb61RemU2TDWDXTNHqHNfBSAkGvVZBtn1AJV1a"),"\uff0c\u6211\u4eec\u4ecd\u7136\u5c06",(0,r.kt)("inlineCode",{parentName:"p"},"02"),"\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u8282\uff1a",(0,r.kt)("inlineCode",{parentName:"p"}," 02f2d606a67f58fa0b3ad2b556195a0ef905676efd4e2114"),"\u3002\u4ece\u76f4\u89c9\u4e0a\u770b\uff0c\u6709\u4e9b\u5730\u5740\u603b\u662f\u6709\u76f8\u540c\u7684\u524d\u7f00\uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u5730\u5740\u50cf\u662f\u7528 Kusama \u751f\u6210\u7684\u5374\u53ef\u80fd\u5343\u5dee\u4e07\u522b\uff0c\u4f46\u8fd9\u53ea\u662f\u5bf9\u4e8e Base58-check \u7f16\u7801\u7684\u602a\u7656\u3002"),(0,r.kt)("h2",{id:"\u83b7\u53d6\u548c\u7ba1\u7406\u5730\u5740"},"\u83b7\u53d6\u548c\u7ba1\u7406\u5730\u5740"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"most user-friendly")," way to create a Polkadot or Kusama address is through the ",(0,r.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps/#/accounts"},"Polkadot-JS UI"),". Remember to back up the seed phrase used to generate your account - the accounts are stored only in your browser, so purging the cache will wipe your accounts as well. You would then have to recreate them using the seed phrase given to you by the UI - this will also restore all your previously held balances."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u66f4\u65b9\u4fbf\u548c\u63a8\u8350"),"\u7684\u5c06\u5e10\u6237\u4fdd\u5b58\u5728\u8ba1\u7b97\u673a\u4e0a\u65b9\u6cd5\u662f\u4f7f\u7528",(0,r.kt)("a",{parentName:"p",href:"https://github.com/polkadot-js/extension"}," Polkadot {.js}\u6269\u5c55\u540d"),"\u3002\u6b64\u6269\u5c55\u7a0b\u5e8f\u53ef\u4ee5\u8bb0\u4f4f\u60a8\u7684\u5e10\u6237\uff0c\u8ba9\u60a8\u4e0d\u5fc5\u62c5\u5fc3\u5373\u53ef\u6e05\u9664\u6d4f\u89c8\u5668\u7f13\u5b58\u3002\u4e0d\u8fc7\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5907\u4efd\u60a8\u7684\u79cd\u5b50\u77ed\u8bed - \u5982\u679c\u60a8\u65e0\u6cd5\u4f7f\u7528\u8fd9\u53f0\u8ba1\u7b97\u673a\uff0c\u6216\u8005\u6269\u5c55\u540d\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5d29\u6e83\u800c\u65e0\u6cd5\u4fee\u590d\uff0c\u5219\u8be5\u77ed\u8bed\u5c06\u6d3e\u4e0a\u7528\u573a\u3002"),(0,r.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u8fd9\u4f1a\u5c06\u60a8\u7684\u5e10\u6237\u4fdd\u7559\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u662f\u4e00\u4e2a\u5b58\u653e\u5927\u91cf\u8d44\u4ea7\u7684\u5b89\u5168\u4e4b\u5730\u3002\u6839\u636e\u5b9a\u4e49\uff0c\u6d4f\u89c8\u5668\u662f\u4e00\u4e2a\u201c\u70ed\u94b1\u5305\u201d\uff0c\u5bb9\u6613\u53d7\u5230\u5404\u79cd\u5404\u6837\u7684\u653b\u51fb\uff0c\u56e0\u6b64\uff0c\u5728\u5904\u7406\u4e0d\u91cd\u8981\u7684\u6570\u989d\u65f6\uff0c\u8bf7\u5c06\u8d44\u91d1\u4fdd\u5b58\u5728\u51b7\u5e93\u4e2d\u3002\u4e3a\u4e86\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u60a8\u53ef\u4ee5\u5b89\u5168\u5730\u9690\u85cf\u5e10\u6237\u7684\u79cd\u5b50\u77ed\u8bed\uff0c\u5e76\u5728\u521b\u5efa\u5e10\u6237\u540e\u4ece\u8ba1\u7b97\u673a\u4e2d\u5220\u9664\u6240\u6709\u5e10\u6237\u75d5\u8ff9\u3002"),(0,r.kt)("p",null,"\u9664\u4e86\u6269\u5c55\u540d\u548c\u9ed8\u8ba4UI\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/tree/master/bin/utils/subkey"}," \u5b50\u952e\u5de5\u5177"),"\u3002\u5b50\u952e\u65e8\u5728\u4f9b\u7528\u6237\u719f\u6089\u4f7f\u7528\u547d\u4ee4\u884c\u4f7f\u7528\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u4ee4\u4eba\u751f\u754f\uff0c\u4f46\u76f8\u5f53\u5e73\u6613\u8fd1\u4eba\u3002\u8bf7\u6309\u7167",(0,r.kt)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/integrate/subkey"},"\u5b50\u952e\u6587\u6863"),"\u3002\u5982\u679c\u4f7f\u7528\u5f97\u5f53\uff0c\u5b50\u952e\u662f\u521b\u5efa\u5e10\u6237\u7684",(0,r.kt)("strong",{parentName:"p"},"\u6700\u5b89\u5168"),"\u7684\u53ef\u7528\u65b9\u6cd5\u3002"),(0,r.kt)("p",null,"\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u5b89\u5168\u7684",(0,r.kt)("a",{parentName:"p",href:"https://www.parity.io/signer/"},"\u5947\u5076\u6821\u9a8c\u7b7e\u540d\u4eba"),"\u3002\u8fd9\u6837\u53ef\u4ee5\u5c06\u60a8\u7684\u94a5\u5319\u4fdd\u6301\u5728\u6c14\u5bc6\u7684\u624b\u673a\u4e0a\u3002\u4f46\u662f\uff0c\u8fd9\u786e\u5b9e\u9700\u8981\u83b7\u5f97\u60a8\u5e38\u7528\u7684\u4e14\u4ec5\u7528\u4e8e Parity Signer \u7684\u65e7 Android \u6216 iOS \u517c\u5bb9\u624b\u673a\u3002"),(0,r.kt)("p",null,"\u8d26\u672c\u53ef\u4ee5\u4e0e\u786c\u4ef6\u94b1\u5305\u96c6\u6210\u3002\u5b8c\u6574\u6307\u5357\u53ef\u5728",(0,r.kt)("a",{parentName:"p",href:"learn-ledger"},"\u6b64\u5904"),"\u83b7\u5f97\u3002"),(0,r.kt)("p",null,"\u53e6\u5916\uff0c\u60a8\u53ef\u80fd\u4f1a\u5728",(0,r.kt)("a",{parentName:"p",href:"build-wallets"},"\u94b1\u5305"),"\u9875\u9762\u4e0a\u627e\u5230\u5176\u4ed6\u94b1\u5305\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u5176\u4e2d\u4e00\u4e9b\u662f",(0,r.kt)("strong",{parentName:"p"},"\u672a\u7ecf\u5ba1\u8ba1\u7684"),"\uff0c\u9664\u975e\u53e6\u6709\u8bf4\u660e\uff0c\u5426\u5219\u5b83\u4eec\u5e76\u4e0d\u96b6\u5c5e\u4e8eWeb3 Foundation\u6216Polkadot\u7684\u6b63\u5f0f\u9879\u76ee\u3002"),(0,r.kt)("h2",{id:"\u4f59\u989d\u7c7b\u578b"},"\u4f59\u989d\u7c7b\u578b"),(0,r.kt)("p",null,"\u5728 Polkadot \u4e0a\uff0c\u6709\u56db\u79cd\u4e0d\u540c\u7684\u4f59\u989d\u7c7b\u578b\uff0c\u63d0\u793a\u60a8\u7684\u4f59\u989d\u662f\u5426\u53ef\u4ee5\u7528\u4e8e\u8f6c\u8d26\uff0c\u652f\u4ed8\u8d39\u7528\uff0c\u6216\u8005\u7531\u4e8e\u94fe\u4e0a\u8981\u6c42\u800c\u5fc5\u987b\u51bb\u7ed3\u4e14\u4e0d\u88ab\u4f7f\u7528\u3002"),(0,r.kt)("p",null,"\u4f59\u989d\u7c7b\u578b\u7531 Substrate \u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"AccountData"),"\u7ed3\u6784\u5b9a\u4e49\u3002\u56db\u79cd\u7c7b\u578b\u7684\u4f59\u989d\u5305\u62ec",(0,r.kt)("inlineCode",{parentName:"p"},"free"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"reserved"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"misc_frozen")," (\u9a7c\u5cf0\u4f53\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"miscFrozen"),") \u548c",(0,r.kt)("inlineCode",{parentName:"p"}," fee_frozen")," (\u9a7c\u5cf0\u4f53\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"feeFrozen"),")\u3002"),(0,r.kt)("p",null,"In general, the ",(0,r.kt)("strong",{parentName:"p"},"usable")," balance of the account is the amount that is ",(0,r.kt)("inlineCode",{parentName:"p"},"free")," minus any funds that are considered frozen (either ",(0,r.kt)("inlineCode",{parentName:"p"},"misc_frozen")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"fee_frozen"),') and depends on the reason for which the funds are to be used. If the funds are to be used for transfers then the usable amount is the "free" amount minus any ',(0,r.kt)("inlineCode",{parentName:"p"},"misc_frozen"),' funds. However, if the funds are to be used to pay transaction fees than the usable amount would be the "free" funds minus any funds that are ',(0,r.kt)("inlineCode",{parentName:"p"},"fee_frozen"),"."),(0,r.kt)("p",null,"\u5e10\u6237\u7684\u201c\u603b\u201d\u4f59\u989d\u88ab\u8ba4\u4e3a\u662f\u5e10\u6237\u4e2d\u201c\u81ea\u7531\u201d\u8d44\u91d1\u7684\u6570\u91cf\u51cf\u53bb\u4efb\u4f55\u201c\u4fdd\u7559\u201d\u7684\u8d44\u91d1\u3002\u4fdd\u7559\u7684\u8d44\u91d1\u662f\u6839\u636e\u94fe\u4e0a\u7684\u8981\u6c42\u6301\u6709\u7684\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4e00\u4e9b\u94fe\u4e0a\u64cd\u4f5c\u6765\u91ca\u653e\u3002\u4f8b\u5982\uff0c\u201c\u8eab\u4efd\u201d\u6a21\u5757\u5728\u6ce8\u518c\u94fe\u4e0a\u8eab\u4efd\u65f6\u4fdd\u7559\u8d44\u91d1\uff0c\u4f46\u662f\u901a\u8fc7\u6e05\u9664\u8eab\u4efd\uff0c\u60a8\u53ef\u4ee5\u53d6\u6d88\u4fdd\u7559\u8d44\u91d1\u5e76\u518d\u6b21\u91ca\u653e\u5b83\u4eec\u3002"),(0,r.kt)("h2",{id:"\u73b0\u6709\u5b58\u6b3e\u548c\u56de\u6536"},"\u73b0\u6709\u5b58\u6b3e\u548c\u56de\u6536"),(0,r.kt)("p",null,"When you generate an account (address), you only generate a ",(0,r.kt)("em",{parentName:"p"},"key")," that lets you access it. The account does not exist yet on-chain. For that, it needs the existential deposit: 0.001666666667 KSM (on Kusama) or 1 DOT (on Polkadot mainnet)."),(0,r.kt)("p",null,"\u5982\u679c\u5e10\u6237\u4f4e\u4e8e\u73b0\u6709\u5b58\u6b3e\uff0c\u5219\u4f1a\u5bfc\u81f4\u8be5\u5e10\u6237",(0,r.kt)("em",{parentName:"p"},"\u88ab\u56de\u6536"),"\u3002\u8be5\u5e10\u6237\u4ee5\u53ca\u8be5\u5730\u5740\u4e2d\u7684\u6240\u6709\u8d44\u91d1\u5c06\u4ece\u533a\u5757\u94fe\u72b6\u6001\u4e2d\u5220\u9664\uff0c\u4ee5\u8282\u7701\u7a7a\u95f4\u3002\u60a8\u4e0d\u4f1a\u5931\u53bb\u5bf9\u56de\u6536\u5730\u5740\u7684\u8bbf\u95ee\u6743\u9650 - \u53ea\u8981\u60a8\u62e5\u6709\u79c1\u94a5\u6216\u6062\u590d\u77ed\u8bed\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u8be5\u5730\u5740 - \u4f46\u5b83\u9700\u8981\u5145\u503c\u989d\u5916\u7684\u5b58\u7eed\u91d1\u989d\u624d\u80fd\u4e0e\u94fe\u8fdb\u884c\u4ea4\u4e92\u3002"),(0,r.kt)("p",null,"Transaction fees cannot cause an account to be reaped. Since fees are deducted from the account before any other transaction logic, accounts with balances ",(0,r.kt)("em",{parentName:"p"},"equal to")," the existential deposit cannot construct a valid transaction. Additional funds will need to be added to cover the transaction fees."),(0,r.kt)("p",null,"Here's another way to think about existential deposits. Ever notice those ",(0,r.kt)("inlineCode",{parentName:"p"},"Thumbs.db")," files on Windows or ",(0,r.kt)("inlineCode",{parentName:"p"},".DS_Store")," files on Mac? Those are junk, they serve no specific purpose other than making previews a bit faster. If a folder is completely empty save for such a file, you can remove the folder to clear junk off your hard drive. That does not mean you lose access to this folder forever - you can always recreate it. You have the ",(0,r.kt)("em",{parentName:"p"},"key"),", after all - you're the computer's owner. It just means you want to keep your computer clean until you maybe end up needing this folder again, and then recreate it. Your address is like this folder - it gets removed from the chain when nothing is in it, but gets put back when it has at least the existential deposit."),(0,r.kt)("h2",{id:"\u7d22\u5f15"},"\u7d22\u5f15"),(0,r.kt)("p",null,"A Kusama or Polkadot address can have an index. An index is like a short and easy to remember version of an address. Claiming an index requires a deposit which is released when the index is cleared."),(0,r.kt)("p",null,"Indices are populated in order. Think of them like slots going from 0 to any arbitrary number:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"[0][1][2][3][4][5][6]...")),(0,r.kt)("p",null,"If slots 0-2 are populated by addresses A, B and C respectively, and I add an existential deposit to address X, that address will automatically be put into slot 3. Henceforth, you can send me money by just sending to ",(0,r.kt)("inlineCode",{parentName:"p"},"[3]")," rather than remembering my whole address."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"[0][1][2][3][4][5][6]...\n[A][B][C][X][ ][ ][ ]...\n")),(0,r.kt)("p",null,"But what if an account gets reaped as explained above? In that case, the index is emptied. In other words, the slot frees up again. If someone creates a new account, they may end up using the same index another address was using before."),(0,r.kt)("p",null,"It is possible to ",(0,r.kt)("em",{parentName:"p"},"freeze")," an index and permanently assign it to an address. This action consumes a deposit but makes sure that the index can never be reclaimed unless released by the holding account."),(0,r.kt)("p",null,"To register an index, submit a ",(0,r.kt)("inlineCode",{parentName:"p"},"claim")," extrinsic to the ",(0,r.kt)("inlineCode",{parentName:"p"},"indices")," pallet, and follow up with a ",(0,r.kt)("inlineCode",{parentName:"p"},"freeze")," extrinsic. The easiest way to do this is via PolkadotJS UI through the ",(0,r.kt)("em",{parentName:"p"},"Developer -> Extrinsics")," menu:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Indices extrinsics",src:a(65107).Z})),(0,r.kt)("p",null,"To find available indices to claim, ",(0,r.kt)("a",{parentName:"p",href:"https://www.shawntabrizi.com/substrate-js-utilities/indices/"},"this helper tool may come in handy"),"."),(0,r.kt)("h2",{id:"\u8eab\u4efd"},"\u8eab\u4efd"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/tree/master/frame/identity"},(0,r.kt)("em",{parentName:"a"},"Identities pallet"))," built into Polkadot allows users to attach on-chain metadata to their accounts. This metadata can be verified by independent registrars to provide trustworthiness. To learn more about how to set or release an identity, how to define sub-accounts, or how to become a registrar, please read ",(0,r.kt)("a",{parentName:"p",href:"learn-identity"},"this guide"),"."),(0,r.kt)("h2",{id:"\u4ee3\u7406\u8d26\u6237"},"\u4ee3\u7406\u8d26\u6237"),(0,r.kt)("p",null,"Polkadot comes with a generalized proxy account system that allows users to keep keys in cold storage while proxies act on their behalf with restricted (or unrestricted) functionality. See the ",(0,r.kt)("a",{parentName:"p",href:"learn-proxies"},"proxies")," page for more information."),(0,r.kt)("h2",{id:"\u591a\u7b7e\u540d\u8d26\u6237"},"\u591a\u7b7e\u540d\u8d26\u6237"),(0,r.kt)("p",null,"It is possible to create a multi-signature account in Substrate-based chains. A multi-signature account is composed of one or more addresses and a threshold. The threshold defines how many signatories (participating addresses) need to agree on the submission of an extrinsic in order for the call to be successful."),(0,r.kt)("p",null,"For example, Alice, Bob, and Charlie set up a multi-sig with a threshold of 2. This means Alice and Bob can execute any call even if Charlie disagrees with it. Likewise, Charlie and Bob can execute any call without Alice. A threshold is typically a number smaller than the total number of members but can also be equal to it, which means they all have to be in agreement."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Learn more about multisig accounts from our ",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=ZJLqszvhMyM&list=PLOyWqupZ-WGuAuS00rK-pebTMAOxW41W8&index=25&ab_channel=Polkadot"},"technical explainer video"),".")),(0,r.kt)("p",null,"Multi-signature accounts have several uses:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4fdd\u62a4\u60a8\u81ea\u5df1\u7684\u85cf\u533f\u5904\uff1a\u4f7f\u7528\u5176\u4ed6\u7b7e\u7f72\u4eba\u4f5c\u4e3a2FA\u673a\u5236\u6765\u4fdd\u62a4\u60a8\u7684\u8d44\u91d1\u3002\u4e00\u4e2a\u7b7e\u540d\u8005\u53ef\u4ee5\u5728\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\uff0c\u53e6\u4e00\u4e2a\u53ef\u4ee5\u5728\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\uff0c\u6216\u5728\u51b7\u5e93\u4e2d\u3002\u8fd9\u51cf\u6162\u4e86\u60a8\u4e0e\u94fe\u7684\u4ea4\u4e92\u901f\u5ea6\uff0c\u4f46\u662f\u5b89\u5168\u6027\u63d0\u9ad8\u4e86\u51e0\u4e2a\u6570\u91cf\u7ea7\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u8463\u4e8b\u4f1a\u51b3\u7b56\uff1a\u8bf8\u5982\u4f01\u4e1a\u548c\u57fa\u91d1\u4f1a\u4e4b\u7c7b\u7684\u6cd5\u4eba\u5b9e\u4f53\u4f7f\u7528\u591a\u91cd\u7b7e\u540d\u6765\u5171\u540c\u7ba1\u7406\u5b9e\u4f53\u7684\u56fd\u5e93\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u56e2\u4f53\u53c2\u4e0e\u6cbb\u7406\uff1a\u591a\u7b7e\u540d\u5e10\u6237\u53ef\u4ee5\u6267\u884c\u5e38\u89c4\u5e10\u6237\u53ef\u4ee5\u6267\u884c\u7684\u6240\u6709\u64cd\u4f5c\u3002\u5177\u6709\u591a\u91cd\u7b7e\u540d\u7684\u5e10\u6237\u53ef\u4ee5\u662f Kusama \u6cbb\u7406\u4e2d\u7684\u7406\u4e8b\u200b\u200b\u4f1a\u6210\u5458\uff0c\u5728\u8be5\u7406\u4e8b\u4f1a\u4e2d\uff0c\u4e00\u7ec4\u793e\u533a\u6210\u5458\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u8fdb\u884c\u6295\u7968\u3002")),(0,r.kt)("p",null,"Multi-signature accounts ",(0,r.kt)("strong",{parentName:"p"},"cannot be modified after being created"),". Changing the set of members or altering the threshold is not possible and instead requires the dissolution of the current multi-sig and creation of a new one. As such, multi-sig account addresses are ",(0,r.kt)("strong",{parentName:"p"},"deterministic"),", i.e. you can always calculate the address of a multi-sig just by knowing the members and the threshold, without the account existing yet. This means one can send tokens to an address that does not exist yet, and if the entities designated as the recipients come together in a new multi-sig under a matching threshold, they will immediately have access to these tokens."),(0,r.kt)("h3",{id:"\u751f\u6210\u591a\u91cd\u7b7e\u540d\u5e10\u6237\u7684\u5730\u5740"},"\u751f\u6210\u591a\u91cd\u7b7e\u540d\u5e10\u6237\u7684\u5730\u5740"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"NOTE: Addresses that are provided to the multi-sig wallets must be sorted. The below methods for generating sort the accounts for you, but if you are implementing your own sorting then be aware that the public keys are compared byte-for-byte and sorted ascending before being inserted in the payload that is hashed.")),(0,r.kt)("p",null,"Addresses are deterministically generated from the signers and threshold of the multisig wallet. For a code example (in TypeScript) of generating you can view the internals of ",(0,r.kt)("inlineCode",{parentName:"p"},"@w3f/msig-util")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lsaether/msig-util/blob/master/src/actions/deriveAddress.ts"},"here"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@w3f/msig-util")," is a small CLI tool that can determine the multisignature address based on your inputs."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"$ npx @w3f/msig-util@1.0.7 derive --addresses 15o5762QE4UPrUaYcM83HERK7Wzbmgcsxa93NJjkHGH1unvr,1TMxLj56NtRg3scE7rRo8H9GZJMFXdsJk1GyxCuTRAxTTzU --threshold 1\nnpx: installed 79 in 7.764s\n--------------------------------\nAddresses: 15o5762QE4UPrUaYcM83HERK7Wzbmgcsxa93NJjkHGH1unvr 1TMxLj56NtRg3scE7rRo8H9GZJMFXdsJk1GyxCuTRAxTTzU\nThreshold: 1\nMultisig Address (SS58: 0): 15FKUKXC6kwaXxJ1tXNywmFy4ZY6FoDFCnU3fMbibFdeqwGw\n--------------------------------\n")),(0,r.kt)("p",null,"The Polkadot-JS Apps UI also supports multi-sig accounts, as documented in the ",(0,r.kt)("a",{parentName:"p",href:"learn-account-generation#multi-signature-accounts"},"Account Generation page"),". This is easier than generating them manually."),(0,r.kt)("h3",{id:"\u4f7f\u7528\u591a\u91cd\u7b7e\u540d\u5e10\u6237\u8fdb\u884c\u4ea4\u6613"},"\u4f7f\u7528\u591a\u91cd\u7b7e\u540d\u5e10\u6237\u8fdb\u884c\u4ea4\u6613"),(0,r.kt)("p",null,"There are three types of actions you can take with a multi-sig account:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6267\u884c\u4e00\u7b14\u4ea4\u6613"),(0,r.kt)("li",{parentName:"ul"},"\u6388\u6743\u4e00\u7b14\u4ea4\u6613"),(0,r.kt)("li",{parentName:"ul"},"\u64a4\u9500\u4e00\u7b14\u4ea4\u6613")),(0,r.kt)("p",null,"In scenarios where only a single approval is needed, a convenience method ",(0,r.kt)("inlineCode",{parentName:"p"},"as_multi_threshold_1")," should be used. This function takes only the other signatories and the raw call as its arguments."),(0,r.kt)("p",null,"However, in anything but the simple one approval case, you will likely need more than one of the signatories to approve the call before finally executing it. When you create a new call or approve a call as a multi-sig, you will need to place a small deposit. The deposit stays locked in the pallet until the call is executed. The reason for the deposit is to place an economic cost on the storage space that the multi-sig call takes up on the chain and discourage users from creating dangling multi-sig operations that never get executed. The deposit will be reserved in the caller's accounts so participants in multi-signature wallets should have spare funds available."),(0,r.kt)("p",null,"The deposit is dependent on the ",(0,r.kt)("inlineCode",{parentName:"p"},"threshold")," parameter and is calculated as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u5b58\u6b3e=\u5b58\u6b3e\u57fa\u6570+\u9608\u503c*\u5b58\u6b3e\u56e0\u5b50\n")),(0,r.kt)("p",null,"Where ",(0,r.kt)("inlineCode",{parentName:"p"},"DepositBase")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"DepositFactor")," are chain constants set in the runtime code."),(0,r.kt)("p",null,"Currently, the DepositBase is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"deposit(1, 88)")," (key size is 32; value is size 4+4+16+32 = 56 bytes) and the DepositFactor is equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"deposit(0, 32)")," (additional address of 32 bytes)."),(0,r.kt)("p",null,"The deposit function in JavaScript is defined below, cribbed from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paritytech/polkadot/blob/master/runtime/polkadot/src/constants.rs#L26"},"Rust source"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Polkadot\nconst DOLLARS = 10000000000; // planck\nconst MILLICENTS = 100000; // planck\n\n// Kusama\n// const DOLLARS = 166666666666.67;\n// const MILLICENTS = 1666666.66;\n\nconst deposit = (items, bytes) => {\n  return items * 20 * DOLLARS + bytes * 100 * MILLICENTS;\n};\n\nconsole.log("DepositBase", deposit(1, 88));\nconsole.log("DepositFactor", deposit(0, 32));\n')),(0,r.kt)("p",null,"Thus the deposit values can be calculated as shown in the table below."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Polkadot (DOT)"),(0,r.kt)("th",{parentName:"tr",align:null},"Kusama (KSM)"),(0,r.kt)("th",{parentName:"tr",align:null},"Polkadot (planck)"),(0,r.kt)("th",{parentName:"tr",align:null},"Kusama (planck)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u5b58\u6b3e\u57fa\u6570"),(0,r.kt)("td",{parentName:"tr",align:null},"20.088"),(0,r.kt)("td",{parentName:"tr",align:null},"3.3401"),(0,r.kt)("td",{parentName:"tr",align:null},"200880000000"),(0,r.kt)("td",{parentName:"tr",align:null},"3340100000000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u5b58\u6b3e\u56e0\u5b50"),(0,r.kt)("td",{parentName:"tr",align:null},".032"),(0,r.kt)("td",{parentName:"tr",align:null},"0.005333333312"),(0,r.kt)("td",{parentName:"tr",align:null},"320000000"),(0,r.kt)("td",{parentName:"tr",align:null},"5333333312")))),(0,r.kt)("p",null,"Let's consider an example of a multi-sig on Polkadot with a threshold of 2 and 3 signers: Alice, Bob, and Charlie. First, Alice will create the call on chain by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"as_multi")," with the raw call. When doing this Alice will have to deposit ",(0,r.kt)("inlineCode",{parentName:"p"},"DepositBase + (2 * DepositFactor) = 20.152 DOT")," while she waits for either Bob or Charlie to also approve the call. When Bob comes to approve the call and execute the transaction, he will not need to place the deposit and Alice will receive her deposit back."),(0,r.kt)("h3",{id:"example-with-polkadotjs"},"Example with Polkadot.JS"),(0,r.kt)("p",null,"For this example, we will be using the ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.polkadot.network/docs/en/maintain-networks#westend-test-network"},"Westend")," testnet and ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.polkadot.network/docs/en/learn-balance-transfers#polkadot-js-apps"},"Polkadot.JS Apps")," to create a 2-of-3 multisig address and send a transaction with it."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"While Westend is meant to replicate the Polkadot mainnet as closely as possible, there are a few notable differences:"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"Existential deposit is equal to 0.01 WND (Westies; Westend's native coin) instead of 1 DOT."),(0,r.kt)("li",{parentName:"ul"},"The multisignature transaction deposit is equal to ~1 WND instead of ~20.2 DOT.")),(0,r.kt)("p",{parentName:"blockquote"},"The photos below reflects values in WND, but instructions are the same for DOT.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To create a multisig address and send a transaction using it, you will need the following:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"List of the multisig member's addresses. We will use Alice, Bob, and Charlie."),(0,r.kt)("li",{parentName:"ul"},"DOT to deposit into the multisig address."),(0,r.kt)("li",{parentName:"ul"},"~20.2 DOT refundable deposit to send a multisig tarnsaction. This needs to be in the address that initiates a multisignature transaction (in this example, Alice).")),(0,r.kt)("p",null,"You should already have your own account with some coins in it."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Account page",src:a(74712).Z})),(0,r.kt)("p",null,"To generate the multisig address, we need to ",(0,r.kt)("strong",{parentName:"p"},"add the multisig member addresses to the contact book"),' under "Accounts > Address book".'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Address book",src:a(51436).Z})),(0,r.kt)("p",null,'For each address, click "Add contact" in the upper right and provide the address and a name.'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Add Contact",src:a(79899).Z})),(0,r.kt)("p",null,"Here, Bob and Charlie have been added."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Address books 2",src:a(6044).Z})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Next, we need to create the new multisignature address."),' Navitage to the Accounts page (from the toolbar, "Accounts > Accounts") and click the "+ Multisig" button. We will supply the three multisig member addresses, with a value \'2\' for the threshold.'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"New multisig",src:a(90096).Z})),(0,r.kt)("p",null,"Click 'Create', and you should see the new multisig address appear on this Accounts page."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"5",src:a(41584).Z})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Let's fund the address now.")," For this example, we will transfer some coins from Alice's account to the multisig address. Under Alice's address, click 'Send', select the multisig wallet as the destination, and provide an amount. Then, click 'Make Transfer', and then 'Sign and Submit'."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"6",src:a(19727).Z})," ",(0,r.kt)("img",{alt:"7",src:a(82141).Z})),(0,r.kt)("p",null,"We can see that the multisig account now has a balance."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"9",src:a(38029).Z})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To send a transaction, we need one of the members to initiate it.")," Let's use Alice to initiate the transaction."),(0,r.kt)("p",null,"Make sure Alice has enough coins to cover the multisig transaction deposit and the transaction fees. Then, click 'Send' under the \"Multisig Test Address\", select a destination address (we generated an address locally) and a transfer amount, and click 'Make Transfer'."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"10",src:a(9670).Z})),(0,r.kt)("p",null,"To sign as Alice, make sure she is selected as the 'multisig signatory', click 'Sign and Submit', and sign the transaction."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"11",src:a(32557).Z})),(0,r.kt)("p",null,"You will now see a pending transaction the 'Multisig Test Address' (the red '1' icon), and if you click the dropdown under Alice's balance, you will see that a value equivalent to the multisig deposit has been 'reserved', rendering that value untransferable until the multisig transaction completes."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"12",src:a(36356).Z})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Next, we need a second signature.")," Let's get it from Bob. In Bob's browser, repeat the following from the above steps."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add Alice, Charlie, and the multisig transaction destination addresses to Bob's Address book."),(0,r.kt)("li",{parentName:"ol"},"Create a new multisig address with the same parameters (Bob, Alice, and Charlie's addresses, and a threshold value of '2').")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"NOTE: Since multisig address genereation is deterministic, if Bob (or any other member), on his computer, were to generate a multisig address using Alice's, Charlie's and his addresses, with a threshold value of '2', he would produce the ",(0,r.kt)("strong",{parentName:"p"},"same")," multisig address that Alice has here.")),(0,r.kt)("p",null,"If done correctly, we should see that the ",(0,r.kt)("strong",{parentName:"p"},"same")," multisig address is produced in Bob's browser, and that a pending transaction is displayed, too."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"13",src:a(58206).Z})),(0,r.kt)("p",null,"Next, to get Bob's signature, he needs to craft the same multisig transaction that Alice did by providing the same destination address and transfer amount (together, transaction parameters), signing, and submitting it. Alice initiated the transaction by uploading a signature of the hash of the transaction and the hash. These transaction parameters will allow Bob to produce and sign the same transaction (the same hash) that Alice signed earlier."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"14",src:a(45463).Z})),(0,r.kt)("p",null,"Click 'Make Transfer', ensure that Bob is the 'multisig signatory', and click 'Sign and Submit'. Note that 'Multisig message with call (for final approval)' is automatically enabled; this means that, since the transaction will reached the signature threshold, it will execute the actual transaction on chain after adding the second signature."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"15",src:a(20617).Z})),(0,r.kt)("p",null,"Assuming no errors, 'Multisig Destination Account' has a balance of 0.3 WND, and Alice's account has released the multisig transaction deposit."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"16",src:a(90492).Z})),(0,r.kt)("h2",{id:"address-conversion-tools"},"Address Conversion Tools"),(0,r.kt)("p",null,"You can use the tool below to convert any SS58 address for any network for use on different networks."),(0,r.kt)("div",{class:"address-changer"},(0,r.kt)("input",{class:"address-changer-input",id:"input",placeholder:"\u8d34\u4e0b\u4f60\u7684\u5730\u5740",oninput:"globalThis.addressChanger()"}),(0,r.kt)("select",{class:"address-changer-select",id:"prefix-select",oninput:"globalThis.addressChanger()"},(0,r.kt)("option",{value:"0"},"Polkadot"),(0,r.kt)("option",{value:"2"},"Kusama"),(0,r.kt)("option",{value:"5"},"Plasm"),(0,r.kt)("option",{value:"10"},"Acala"),(0,r.kt)("option",{value:"16"},"Kulupu"),(0,r.kt)("option",{value:"28"},"Subsocial"),(0,r.kt)("option",{value:"36"},"Centrifuge"),(0,r.kt)("option",{value:"42"},"Substrate")),(0,r.kt)("span",{class:"address-changer-output",id:"output"})),(0,r.kt)("p",null,"Alternatively, use this ",(0,r.kt)("a",{parentName:"p",href:"https://polkadot.subscan.io/tools/ss58_transform"},"handy subscan tool")," or this ",(0,r.kt)("a",{parentName:"p",href:"https://polkadot-address-convertor.netlify.app/"},"simple address convertor"),"."),(0,r.kt)("h3",{id:"how-to-verify-a-public-keys-associated-address"},"How to Verify a Public Key's Associated Address"),(0,r.kt)("p",null,"You can verify your public key's associated address through a series of inspection steps, where the key is a base-16 (hexadecimal) address."),(0,r.kt)("h4",{id:"using-subkey-to-retrieve-public-key-from-ss58-address"},"Using Subkey to Retrieve Public Key from SS58 Address"),(0,r.kt)("p",null,"This is to showcase that the ",(0,r.kt)("strong",{parentName:"p"},'SS58 address is based on the public key (aka "Account ID")')),(0,r.kt)("p",null,"The Subkey Tool's ",(0,r.kt)("a",{parentName:"p",href:"https://substrate.dev/docs/en/knowledgebase/integrate/subkey#inspecting-keys"},"Inspecting Keys")," section explains how to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"inspect")," command to recalculate your key pair's public key and address."),(0,r.kt)("p",null,"Start by inspecting your account's Polkadot address by running the inspect command against your account's address:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ subkey inspect 1a1LcBX6hGPKg5aQ6DXZpAHCCzWjckhea4sz3P1PvL3oc4F\n\nPublic Key URI `1a1LcBX6hGPKg5aQ6DXZpAHCCzWjckhea4sz3P1PvL3oc4F` is account:\n  Network ID/version: polkadot\n  Public key (hex):   0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  Account ID:         0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  SS58 Address:       1a1LcBX6hGPKg5aQ6DXZpAHCCzWjckhea4sz3P1PvL3oc4F\n")),(0,r.kt)("p",null,'Take note of the hexadecimal string for "Public key (hex)". This is your account\'s public key.'),(0,r.kt)("p",null,"Running the ",(0,r.kt)("inlineCode",{parentName:"p"},"inspect")," command on your public key, the default SS58 address that is returned the associated Substrate address."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ subkey inspect 0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n\nSecret Key URI `0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce` is account:\n  Secret seed: 0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  Public key (hex): 0x5a095388156e3a68d4fb7cbaef981478e1a0be6d4998f00dffc3e4e9c60c104c\n  Account ID: 0x5a095388156e3a68d4fb7cbaef981478e1a0be6d4998f00dffc3e4e9c60c104c\n  SS58 Address: 5E6kwKEhrpVMnZvkBRFCzCcRnMXcft4HSaogYQtgtaw6QJ5s\n")),(0,r.kt)("p",null,"Using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--network")," flag, you can define the network that you would like to inspect, where the SS58 address will be based on that network. Now, running the ",(0,r.kt)("inlineCode",{parentName:"p"},"inspect")," command with ",(0,r.kt)("inlineCode",{parentName:"p"},"--network polkadot")," return your original Polkadot address, thus verifying the public key."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"subkey inspect 0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce --network polkadot\n\nSecret Key URI `0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce` is account:\n  Secret seed: 0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  Public key (hex): 0x5a095388156e3a68d4fb7cbaef981478e1a0be6d4998f00dffc3e4e9c60c104c\n  Account ID: 0x5a095388156e3a68d4fb7cbaef981478e1a0be6d4998f00dffc3e4e9c60c104c\n  SS58 Address: 13345eVmibkqE6wG94JD8MSadyXGNBcRX5YAhht3Sfxcaw9U\n")),(0,r.kt)("p",null,"You will notice that the Subkey Tool recognizes the correct network of the address and returns the associated public key. The public key is returned as a hexadecimal string (i.e. prefixed with ",(0,r.kt)("strong",{parentName:"p"},'"0x"'),"). ",(0,r.kt)("strong",{parentName:"p"},"For both SS58 addresses, the same public key is returned.")),(0,r.kt)("h4",{id:"address-verification"},"Address Verification"),(0,r.kt)("h5",{id:"consider-the-following-example"},"Consider the following example:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"17",src:a(65246).Z})),(0,r.kt)("p",null,"If you are comfortable enough to distinguish between each account parameter, you can prefix the public key string with ",(0,r.kt)("strong",{parentName:"p"},'"0x"')," on your own:"),(0,r.kt)("p",null,"From: ",(0,r.kt)("inlineCode",{parentName:"p"},"Pay DOTs to the Polkadot account:192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce"),', we prefix the address by "0x" -> ',(0,r.kt)("inlineCode",{parentName:"p"},"0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce"),"."),(0,r.kt)("p",null,"Using the ",(0,r.kt)("a",{parentName:"p",href:"https://polkadot.subscan.io/tools/ss58_transform"},"handy subscan tool"),', you can verify both address associations to your public key. Copy your public key into the "Input Account or Public Key" textbox and click "Transform" at the bottom. On the right-hand side, the addresses for Polkadot and Substrate that are returned based on your public key should match with the ones you inspected.'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"18",src:a(69393).Z})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: You may have to scroll down to the bottom of the menu to find the Substrate address based on the menu listings. You will notice that there are many networks that also use the same Substrate address.")),(0,r.kt)("p",null,"You can verify your own public key verification by recalling that Polkadot addresses start with a '1', whereas Substrate addresses generally start with a '5' (Kusama addresses start with a capital letter). See ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.polkadot.network/docs/en/learn-accounts#address-format"},"Addresses")," for more details."),(0,r.kt)("p",null,"Furthermore, the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/w3f/utility-scripts"},"Utility Scripts")," can be referenced for how the verification is performed: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/w3f/utility-scripts/blob/master/src/misc/pubkeyToAddress.js"},"pubkeyToAddress.js")," demonstrates how a Polkadot, Substrate, or Kusama address is interpreted by a single public key."),(0,r.kt)("h2",{id:"\u8d44\u6e90"},"\u8d44\u6e90"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.crowdcast.io/e/polkadot-keys"},"Understanding Accounts and Keys in Polkadot")," - An explanation of what the different kinds of accounts and keys are used for in Polkadot, with Bill Laboon and Chinmay Patel of BlockX Labs.")))}c.isMDXComponent=!0},65107:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/index-a2000a16d514f2136b303dd1d29a17f4.png"},51436:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-1-c31b5f6d3c2f160e834f4e2265b38cfe.png"},9670:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-10-ceb74e8213d1346dffe84019346ce560.png"},32557:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-11-d3e7a77b49fda7b62df0c6be8fb25062.png"},36356:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-12-10e0c141ce04a42b4c542e3d4704e485.png"},58206:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-13-0608e696ec86ffda999cde7f2cde2553.png"},45463:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-14-54a9f6b6ac20a8853a8f67db3e8c0f18.png"},20617:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-15-fdc5b5bdbda388657820ededf6a1228e.png"},90492:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-16-04458d25653c35f03e3aa5c0f02a39e1.png"},79899:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-2-332a03806799c4b9a17d3d98798a49a5.png"},6044:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-3-7459599aefb995fdfc558a6304d08dc9.png"},90096:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-4-4d8c9918b6ef46d9ce977e09e2db9bd4.png"},41584:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-5-ae0eb8a58ad8608fb575ad68192a0969.png"},19727:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-6-86b86d58fce83b63bdbd197f810d15ef.png"},82141:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-7-5535bf0edd0e653777bc091b7bf76ca8.png"},38029:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-9-98f0b6673457a98e5d5de6262717711c.png"},74712:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-addy-a1d7047d605eadc434097b70bb195f8c.png"},65246:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/pubkey-1-6dc18c2b04022519cc6dd0fb3af36f94.png"},69393:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/images/pubkey-2-16f0cbc7db6ab6eb8248a05df94adc35.png"}}]);