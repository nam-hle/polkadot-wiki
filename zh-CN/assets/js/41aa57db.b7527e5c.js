(self.webpackChunk=self.webpackChunk||[]).push([[3681],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},38025:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>i,metadata:()=>s,toc:()=>l,default:()=>p});var r=n(22122),o=n(19756),a=(n(67294),n(3905)),i={id:"maintain-wss",title:"\u8bbe\u7f6e\u5b89\u5168\u8fdc\u7a0b WebSocket \u8fde\u63a5",sidebar_label:"\u8bbe\u7f6e\u5b89\u5168\u8fdc\u7a0b WebSocket \u8fde\u63a5"},s={unversionedId:"maintain-wss",id:"maintain-wss",isDocsHomePage:!1,title:"\u8bbe\u7f6e\u5b89\u5168\u8fdc\u7a0b WebSocket \u8fde\u63a5",description:"You might want to host a node on one server and then connect to it from a UI hosted on another, e.g. Polkadot-JS UI. This will not be possible unless you set up a secure proxy for websocket connections. Let's see how we can set up WSS on a remote Substrate node.",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/maintain-wss.md",sourceDirName:".",slug:"/maintain-wss",permalink:"/polkadot-wiki/zh-CN/docs/maintain-wss",editUrl:"https://github.com/w3f/polkadot-wiki/edit/master/docs/maintain-wss.md",version:"current",sidebar_label:"\u8bbe\u7f6e\u5b89\u5168\u8fdc\u7a0b WebSocket \u8fde\u63a5",frontMatter:{id:"maintain-wss",title:"\u8bbe\u7f6e\u5b89\u5168\u8fdc\u7a0b WebSocket \u8fde\u63a5",sidebar_label:"\u8bbe\u7f6e\u5b89\u5168\u8fdc\u7a0b WebSocket \u8fde\u63a5"}},l=[{value:"\u8bbe\u7f6e\u8282\u70b9",id:"\u8bbe\u7f6e\u8282\u70b9",children:[]},{value:"\u8bbe\u7f6e\u8bc1\u4e66",id:"\u8bbe\u7f6e\u8bc1\u4e66",children:[{value:"\u57df\u540d\u548c Certbot",id:"\u57df\u540d\u548c-certbot",children:[]},{value:"\u81ea\u7b7e\u540d",id:"\u81ea\u7b7e\u540d",children:[]}]},{value:"\u8bbe\u7f6e Nginx \u670d\u52a1\u5668",id:"\u8bbe\u7f6e-nginx-\u670d\u52a1\u5668",children:[]},{value:"Importing the Certificate",id:"importing-the-certificate",children:[]},{value:"Connecting to the node",id:"connecting-to-the-node",children:[]}],c={toc:l};function p(e){var t=e.components,i=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"You might want to host a node on one server and then connect to it from a UI hosted on another, e.g. ",(0,a.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps"},"Polkadot-JS UI"),". This will not be possible unless you set up a secure proxy for websocket connections. Let's see how we can set up WSS on a remote Substrate node."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Note: this should ",(0,a.kt)("strong",{parentName:"em"},"only")," be done for sync nodes used as back-end for some dapps or projects. Never open websockets to your validator node - there's no reason to do that and it can only lead to security gaffes.")),(0,a.kt)("p",null,"\u5728\u672c\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5728 $10 DigitalOcean \u4e0a\u7684 Ubuntu 18.04\u3002 \u6211\u4eec\u5c06\u5047\u5b9a\u4f60\u6b63\u5728\u4f7f\u7528\u7c7b\u4f3c\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e76\u4e14\u4f60\u5df2\u7ecf\u5b89\u88c5 nginx (\u5982\u679c\u6ca1\u6709\uff0c\u8fd0\u884c ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo apt-get install nginx"),")\u3002"),(0,a.kt)("h2",{id:"\u8bbe\u7f6e\u8282\u70b9"},"\u8bbe\u7f6e\u8282\u70b9"),(0,a.kt)("p",null,"\u4e0d\u8bba\u662f\u4e2a\u901a\u7528\u7684 Substrate \uff0cKusama \u8282\u70b9\uff0c\u8fd8\u662f\u4f60\u81ea\u5df1\u7684\u79c1\u6709\u94fe\uff0c\u4ed6\u4eec\u90fd\u9ed8\u8ba4\u4f7f\u7528\u76f8\u540c\u7684 websocket \u8fde\u63a5: \u672c\u5730\u4e3b\u673a\u4e0a\u7684 9944 \u7aef\u53e3\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6211\u4eec\u4f1a\u8bbe\u7f6e\u4e2a Kusama \u540c\u6b65\u8282\u70b9(\u975e\u9a8c\u8bc1\u4eba)\u3002"),(0,a.kt)("p",null,"\u5728\u60a8\u670d\u52a1\u5546\u9009\u521b\u5efa\u52a1\u5668\u63d0\u6216\u5728\u672c\u5730\u521b\u5efa (\u9996\u9009)\u3002 \u5047\u8bbe\u60a8\u6b63\u5728\u4f7f\u7528 Ubuntu 18.04\u3002\u7136\u540e\u5b89\u88c5 Substrate \u5e76\u6784\u5efa\u8282\u70b9\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://getsubstrate.io -sSf | bash\ngit clone https://github.com/paritytech/polkadot kusama\ncd kusama\n./scripts/init.sh\ncargo build --release\n./target/release/polkadot --name "DigitalOcean 10 USD droplet ftw" --rpc-cors all\n')),(0,a.kt)("p",null,"\u8fd9\u5c06\u542f\u52a8\u4e0e Kusama \u4e3b\u7f51\u7684\u540c\u6b65\u8fc7\u7a0b\u3002"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"\u6ce8\u610f\uff1a\u9700\u8981\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"em"},"--rpc-cors")," \u6a21\u5f0f\u4ee5\u4fbf\u5141\u8bb8\u6240\u6709\u5916\u90e8\u8fde\u63a5\u3002")),(0,a.kt)("h2",{id:"\u8bbe\u7f6e\u8bc1\u4e66"},"\u8bbe\u7f6e\u8bc1\u4e66"),(0,a.kt)("p",null,"\u8981\u83b7\u53d6 WSS (secure websocket), \u60a8\u9700\u8981 SSL \u8bc1\u4e66\u3002\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u65b9\u6cd5\u3002"),(0,a.kt)("h3",{id:"\u57df\u540d\u548c-certbot"},"\u57df\u540d\u548c Certbot"),(0,a.kt)("p",null,"The first approach is getting a dedicated domain, redirecting its nameservers to your IP address, setting up an Nginx server for that domain, and finally ",(0,a.kt)("a",{parentName:"p",href:"https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx.html"},"following LetsEncrypt instructions")," for Nginx setup. This will auto-generate an SSL certificate and include it in your Nginx configuration. This will let you connect Polkadot-JS UI to a URL like mynode.mydomain.com rather than 82.196.8.192:9944, which is arguably more user friendly."),(0,a.kt)("p",null,"\u5bf9\u4e8e\u4e91\u7aef\u6258\u7ba1\u670d\u670d\u52a1\u5546\u6216\u5982\u679c\u60a8\u6709\u9759\u6001 IP\uff0c\u8fd9\u6837\u505a\u5f88\u7b80\u5355\uff0c \u4f46\u5728\u60a8\u7684\u5bb6\u670d\u52a1\u5668\u8fd0\u884c\u65f6\u66f4\u96be\u3002"),(0,a.kt)("h3",{id:"\u81ea\u7b7e\u540d"},"\u81ea\u7b7e\u540d"),(0,a.kt)("p",null,"\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u548c\u6211\u4eec\u5728\u8fd9\u91cc\u5c06\u9075\u5faa\u7684\u65b9\u6cd5\u662f\u751f\u6210\u4e00\u4e2a\u81ea\u7b7e\u540d\u7684\u8bc1\u4e66\uff0c\u5e76\u4e14\u5728\u8fde\u63a5\u5230\u60a8\u7684\u8282\u70b9\u65f6\u9760\u60a8\u7684\u539f\u672c IP \u5730\u5740\u3002"),(0,a.kt)("p",null,"\u751f\u6210\u4e00\u4e2a\u81ea\u7b7e\u540d\u7684\u8bc1\u4e66"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt\nsudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n")),(0,a.kt)("h2",{id:"\u8bbe\u7f6e-nginx-\u670d\u52a1\u5668"},"\u8bbe\u7f6e Nginx \u670d\u52a1\u5668"),(0,a.kt)("p",null,"\u73b0\u5728\u662f\u544a\u8bc9 Nginx \u4f7f\u7528\u8fd9\u4e9b\u8bc1\u4e66\u7684\u65f6\u5019\u4e86\u3002 \u4e0b\u9762\u7684\u670d\u52a1\u5668\u8bbe\u7f6e\u662f\u60a8\u6240\u9700\u8981\u7684\uff0c\u4f46\u7262\u8bb0\u60a8\u9700\u8981\u66ff\u6362\u4e00\u4e9b\u6570\u503c\u3002\u8bf7\u6ce8\u610f\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"SERVER_ADDRESS")," \u5982\u679c\u4f60\u6709\u57df\u540d\uff0c\u5e94\u8be5\u66ff\u6362\u6210\u4f60\u7684\u57df\u540d\uff0c\u6216\u8005\u4f60\u7684\u670d\u52a1\u5668\u7684 IP \u5730\u5740\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CERT_LOCATION")," \u5982\u679c\u60a8\u4f7f\u7528 Certbot\uff0c\u5e94\u8be5\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/letsensencrypt/live/YOUR_DOMAIN/fullchain.pem")," \u6216\u8005 ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/ssl/certs/nginx-selfsigned.crt")," \u5982\u679c\u662f\u81ea\u7b7e\u540d\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CERT_LOCATION_KEY")," should be ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/letsencrypt/live/YOUR_DOMAIN/privkey.pem")," if you used Certbot, or ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/ssl/private/nginx-selfsigned.key")," if self-signed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CERT_DHPARAM")," \u5982\u679c\u60a8\u4f7f\u7528 Certbot\uff0c \u5e94\u8be5\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/letsencrypt/ssl-dhparams.pem")," \uff0c\u5982\u679c\u60a8\u662f\u81ea\u7b7e\u540d\uff0c\u5e94\u8be5\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/ssl/certs/dhparam.pem")," \u3002")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"\u8bf7\u6ce8\u610f\u5982\u679c\u60a8\u4f7f\u7528 Certbot \uff0c\u5b83\u5e94\u8be5\u5728\u4e0b\u9762\u4e3a\u60a8\u63d2\u5165\u8def\u5f84\uff0c\u5982\u679c\u60a8\u9075\u5faa ",(0,a.kt)("a",{parentName:"em",href:"https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx.html"},"\u5b98\u65b9\u6307\u793a"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-conf"},'server {\n\n        server_name SERVER_ADDRESS;\n\n        root /var/www/html;\n        index index.html;\n\n        location / {\n          try_files $uri $uri/ =404;\n\n          proxy_pass http://localhost:9944;\n          proxy_set_header X-Real-IP $remote_addr;\n          proxy_set_header Host $host;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n          proxy_http_version 1.1;\n          proxy_set_header Upgrade $http_upgrade;\n          proxy_set_header Connection "upgrade";\n        }\n\n        listen [::]:443 ssl ipv6only=on;\n        listen 443 ssl;\n        ssl_certificate CERT_LOCATION;\n        ssl_certificate_key CERT_LOCATION_KEY;\n\n        ssl_session_cache shared:cache_nginx_SSL:1m;\n        ssl_session_timeout 1440m;\n\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n        ssl_prefer_server_ciphers on;\n\n        ssl_ciphers "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS";\n\n        ssl_dhparam CERT_DHPARAM;\n\n}\n')),(0,a.kt)("p",null,"\u8bbe\u7f6e\u540e\u91cd\u542f nginx: ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo service nginx restart"),"\u3002"),(0,a.kt)("h2",{id:"importing-the-certificate"},"Importing the Certificate"),(0,a.kt)("p",null,"If you used the self-signed certificate approach, modern browsers will not let you connect to this websocket endpoint without that certificate being imported - they will emit an ",(0,a.kt)("inlineCode",{parentName:"p"},"NET:ERR_CERT_AUTHORITY_INVALID")," message."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"ERR_CERT_AUTHORITY_INVALID",src:n(25412).Z})),(0,a.kt)("p",null,"Every websocket connection bootstraps itself with ",(0,a.kt)("inlineCode",{parentName:"p"},"https")," first, so to allow the certificate, visit the IP of your machine in the browser prefixed with ",(0,a.kt)("inlineCode",{parentName:"p"},"https"),", like so: ",(0,a.kt)("inlineCode",{parentName:"p"},"https://MY_IP"),'. This should produce a "Not private" warning which you can skip by going to "Advanced" and the clicking on "Proceed to Site". You have now whitelisted this IP and its self-signed certificate for connecting.'),(0,a.kt)("h2",{id:"connecting-to-the-node"},"Connecting to the node"),(0,a.kt)("p",null,"Open ",(0,a.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps"},"Polkadot-JS UI"),' and click the logo in the top left to switch the node. Activate the "Development" toggle and input your node\'s address - either the domain or the IP address. Remember to prefix with ',(0,a.kt)("inlineCode",{parentName:"p"},"wss://"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"A sync-in-progress chain connected to Polkadot-JS UI",src:n(83180).Z})),(0,a.kt)("p",null,"Now you have a secure remote connect setup for your Substrate node."))}p.isMDXComponent=!0},83180:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=n.p+"assets/images/maintain-wss-image-0fe72147f38d8b6766328dd834a517a6.png"},25412:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r="data:image/png;base64,"}}]);