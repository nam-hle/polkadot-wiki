(self.webpackChunk=self.webpackChunk||[]).push([[199],{3905:(e,t,a)=>{"use strict";a.d(t,{Zo:()=>h,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},h=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||i;return a?n.createElement(m,o(o({ref:t},h),{},{components:a})):n.createElement(m,o({ref:t},h))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},55654:(e,t,a)=>{"use strict";a.r(t),a.d(t,{frontMatter:()=>o,metadata:()=>l,toc:()=>s,default:()=>h});var n=a(22122),r=a(19756),i=(a(67294),a(3905)),o={id:"learn-crosschain",title:"\u8de8\u94fe\u6d88\u606f\u4f20\u9012 (XCMP)",sidebar_label:"\u8de8\u94fe\u6d88\u606f\u4f20\u9012 (XCMP)"},l={unversionedId:"learn-crosschain",id:"learn-crosschain",isDocsHomePage:!1,title:"\u8de8\u94fe\u6d88\u606f\u4f20\u9012 (XCMP)",description:"Polkadot\u4f7f\u7528\u57fa\u4e8eMerkle\u6811\u7684\u7b80\u5355\u6392\u961f\u673a\u5236\u5b9e\u73b0\u8de8\u94fe\u4ea4\u6613\uff0c\u5e76\u786e\u4fdd\u5176\u771f\u5b9e\u6027\u3002\u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u8005\u5e94\u8d1f\u8d23\u5c06\u67d0\u4e00\u5e73\u884c\u94fe\u4e0a\u8f93\u51fa\u961f\u5217\u4e2d\u7684\u4ea4\u6613\u79fb\u81f3\u76ee\u6807\u5e73\u884c\u94fe\u4e0a\u7684\u8f93\u5165\u961f\u5217\u4e2d\u3002\u7136\u800c\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u4e2d\u7ee7\u94fe\u4ec5\u5b58\u50a8\u76f8\u5173\u5143\u6570\u636e\u7684\u54c8\u5e0c\u503c\u3002",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/learn-crosschain.md",sourceDirName:".",slug:"/learn-crosschain",permalink:"/polkadot-wiki/zh-CN/docs/learn-crosschain",editUrl:"https://github.com/w3f/polkadot-wiki/edit/master/docs/learn-crosschain.md",version:"current",sidebar_label:"\u8de8\u94fe\u6d88\u606f\u4f20\u9012 (XCMP)",frontMatter:{id:"learn-crosschain",title:"\u8de8\u94fe\u6d88\u606f\u4f20\u9012 (XCMP)",sidebar_label:"\u8de8\u94fe\u6d88\u606f\u4f20\u9012 (XCMP)"},sidebar:"docs",previous:{title:"\u968f\u673a\u6027",permalink:"/polkadot-wiki/zh-CN/docs/learn-randomness"},next:{title:"SPREE",permalink:"/polkadot-wiki/zh-CN/docs/learn-spree"}},s=[{value:"XCMP \u6982\u8ff0",id:"xcmp-\u6982\u8ff0",children:[]},{value:"\u6c34\u5e73\u4e2d\u7ee7\u6d88\u606f\u4f20\u9012\uff08HRMP\uff09",id:"\u6c34\u5e73\u4e2d\u7ee7\u6d88\u606f\u4f20\u9012\uff08hrmp\uff09",children:[]},{value:"\u5782\u76f4\u6d88\u606f\u4f20\u9012",id:"\u5782\u76f4\u6d88\u606f\u4f20\u9012",children:[]},{value:"XCMP \u6d88\u606f\u683c\u5f0f",id:"xcmp-\u6d88\u606f\u683c\u5f0f",children:[]},{value:"How To Make Cross Chain Transfers",id:"how-to-make-cross-chain-transfers",children:[]},{value:"High Level XCMP",id:"high-level-xcmp",children:[]},{value:"Resources",id:"resources",children:[]}],c={toc:s};function h(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Polkadot\u4f7f\u7528\u57fa\u4e8eMerkle\u6811\u7684\u7b80\u5355\u6392\u961f\u673a\u5236\u5b9e\u73b0\u8de8\u94fe\u4ea4\u6613\uff0c\u5e76\u786e\u4fdd\u5176\u771f\u5b9e\u6027\u3002\u4e2d\u7ee7\u94fe\u9a8c\u8bc1\u8005\u5e94\u8d1f\u8d23\u5c06\u67d0\u4e00\u5e73\u884c\u94fe\u4e0a\u8f93\u51fa\u961f\u5217\u4e2d\u7684\u4ea4\u6613\u79fb\u81f3\u76ee\u6807\u5e73\u884c\u94fe\u4e0a\u7684\u8f93\u5165\u961f\u5217\u4e2d\u3002\u7136\u800c\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u4e2d\u7ee7\u94fe\u4ec5\u5b58\u50a8\u76f8\u5173\u5143\u6570\u636e\u7684\u54c8\u5e0c\u503c\u3002"),(0,i.kt)("p",null,"\u901a\u5e38\u5728\u4ee3\u7801\u5e93\u548c\u76f8\u5173\u6587\u6863\u4e2d\u5c06\u8f93\u5165\u548c\u8f93\u51fa\u961f\u5217\u5206\u522b\u6210\u4e3a\u201c\u5165\u53e3\u201d\u548c\u201c\u51fa\u53e3\u201d\u6d88\u606f\u3002"),(0,i.kt)("h2",{id:"xcmp-\u6982\u8ff0"},"XCMP \u6982\u8ff0"),(0,i.kt)("p",null,"XCMP \u76ee\u524d\u4ecd\u5904\u4e8e\u5f00\u53d1\u9636\u6bb5\uff0c\u5176\u5177\u4f53\u7ec6\u8282\u53ef\u80fd\u6539\u53d8\u3002\u4f46\u662f\uff0c\u5176\u603b\u4f53\u67b6\u6784\u7684\u8bbe\u8ba1\u51b3\u5b9a\u5982\u4e0b\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u8de8\u94fe\u6d88\u606f\u5c06",(0,i.kt)("em",{parentName:"li"},"\u4e0d\u4f1a"),"\u8f6c\u53d1\u81f3\u4e2d\u7ee7\u94fe\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u8de8\u94fe\u6d88\u606f\u6709\u957f\u5ea6\u9650\u5236"),(0,i.kt)("li",{parentName:"ul"},"\u5e73\u884c\u94fe\u53ef\u4ee5\u62d2\u7edd\u63a5\u6536\u4ece\u5176\u5b83\u5e73\u884c\u94fe\u53d1\u51fa\u7684\u4fe1\u606f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53d1\u9001\u65b9\u4f1a\u610f\u8bc6\u5230\u6709\u969c\u788d"),(0,i.kt)("li",{parentName:"ul"},"\u6536\u96c6\u4eba\u8282\u70b9\u8d1f\u8d23\u628a\u5e73\u884c\u94fe\u4e4b\u95f4\u7684\u4fe1\u606f\u4f20\u9012"),(0,i.kt)("li",{parentName:"ul"},'\u6536\u96c6\u4eba\u4ea7\u751f"\u51fa\u53e3"\u5217\u8868\u4fe1\u606f\u4e26\u4f1a\u5728"\u5165\u53e3"\u63a5\u6536\u5230\u5176\u5b83\u5e73\u884c\u94fe\u4fe1\u606f'),(0,i.kt)("li",{parentName:"ul"},"\u5e73\u884c\u94fe\u5728\u6bcf\u4e2a\u533a\u5757\u4e2d\uff0c\u5c06\u4f1a\u4f20\u9012\u6240\u6709\u5176\u5b83\u5e73\u884c\u94fe\u4fe1\u606f"),(0,i.kt)("li",{parentName:"ul"},"\u5f53\u6536\u96c6\u4eba\u4ea7\u751f\u4e86\u533a\u5757\u5e76\u63d0\u4ea4\u7ed9\u9a8c\u8bc1\u4eba\uff0c\u5b83\u4f1a\u6536\u96c6\u6700\u65b0\u5165\u53e3\u961f\u5217\u4fe1\u606f\u5e76\u4e14\u5904\u7406\u5b83"),(0,i.kt)("li",{parentName:"ul"},"\u9a8c\u8bc1\u4eba\u5c06\u4f1a\u5bf9\u6536\u96c6\u4eba\u63d0\u4ea4\u7684\u5e73\u884c\u94fe\u533a\u5757\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5305\u62ec\u5904\u7406\u5230\u8be5\u5e73\u884c\u94fe\u9884\u671f\u5165\u53e3\u7684\u4fe1\u606f")),(0,i.kt)("p",null,"XCMP queues must be initiated by first opening a channel between two parachains. The channel is identified by both the sender and recipient parachains, meaning that it's a one-way channel. A pair of parachains can have at most two channels between them, one for sending messages to the other chain and another for receiving messages. The channel will require a deposit in DOT to be opened, which will get returned when the channel is closed."),(0,i.kt)("h2",{id:"\u6c34\u5e73\u4e2d\u7ee7\u6d88\u606f\u4f20\u9012\uff08hrmp\uff09"},"\u6c34\u5e73\u4e2d\u7ee7\u6d88\u606f\u4f20\u9012\uff08HRMP\uff09"),(0,i.kt)("p",null,"\u5f53 XCMP \u534f\u8bae\u5904\u4e8e\u90e8\u7f72\u9636\u6bb5\u65f6\uff0cHRMP \u534f\u8bae\u5c06\u4f5c\u4e3a\u5176\u66ff\u4ee3\u65b9\u6848\u5b58\u5728\u3002HRMP \u534f\u8bae\u4e0e XCMP \u534f\u8bae\u5177\u6709\u76f8\u540c\u7684\u63a5\u53e3\u53ca\u529f\u80fd\uff0c\u4f46\u662f\u5176\u5bf9\u8d44\u6e90\u7684\u9700\u6c42\u660e\u663e\u9ad8\u4e8e XCMP\uff0c\u539f\u56e0\u5728\u4e8e\u5176\u5c06\u6240\u6709\u6d88\u606f\u90fd\u5b58\u50a8\u5728\u4e2d\u7ee7\u94fe\u4e2d\u3002\u5f53 XCMP \u5b8c\u6210\u90e8\u7f72\u65f6\uff0cHRMP \u5c06\u88ab\u9010\u6b65\u6dd8\u6c70\u3002"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u6ce8\uff1astop-gap \u534f\u8bae\u662f\u539f\u534f\u8bae\u529f\u80fd\u672a\u5b8c\u5168\u5b9e\u73b0\u65f6\u7684\u4e34\u65f6\u66ff\u4ee3\u3002\u5f53 XCMP \u4ecd\u5904\u4e8e\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u65f6\uff0cHRMP \u5373\u4e3a\u5176\u66ff\u4ee3\u534f\u8bae\u3002")),(0,i.kt)("h2",{id:"\u5782\u76f4\u6d88\u606f\u4f20\u9012"},"\u5782\u76f4\u6d88\u606f\u4f20\u9012"),(0,i.kt)("p",null,"\u5782\u76f4\u6d88\u606f\u4f20\u9012\u5206\u4e3a\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e0a\u884c\u6d88\u606f\u4f20\u9012\uff08UMP\uff09\u548c\u4e0b\u884c\u6d88\u606f\u4f20\u9012\uff08DMP\uff09\u3002\u5f53\u6d88\u606f\u7531\u4e00\u5e73\u884c\u94fe\u6216\u5e73\u884c\u7ebf\u7a0b\u4ea7\u751f\u5e76\u4f20\u9012\u81f3\u4e2d\u7ee7\u94fe\u65f6\u4f7f\u7528UMP\u3002\u5f53\u4e2d\u7ee7\u94fe\u4ea7\u751f\u7684\u4fe1\u606f\u9700\u4f20\u9012\u81f3\u5e73\u884c\u94fe\u65f6\u4f7f\u7528 UMP\u3002\u901a\u8fc7 DMP \u4f20\u9012\u7684\u4fe1\u606f\u53ef\u80fd\u5728\u5e73\u884c\u94fe\u4e2d\u4ea7\u751f\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u4e2a UMP \u5c06\u88ab\u7528\u4e8e\u5411\u4e2d\u7ee7\u94fe\u4f20\u9012\u6d88\u606f\uff0cDMP \u7528\u4e8e\u5c06\u8be5\u4fe1\u606f\u4e0b\u4f20\u81f3\u53e6\u4e00\u5e73\u884c\u94fe\u3002"),(0,i.kt)("h2",{id:"xcmp-\u6d88\u606f\u683c\u5f0f"},"XCMP \u6d88\u606f\u683c\u5f0f"),(0,i.kt)("p",null,"\u5173\u4e8e XMCP \u6d88\u606f\u683c\u5f0f\u7684\u63cf\u8ff0\uff0c\u8bf7\u53c2\u9605 GitHub \u4e0a\u7684",(0,i.kt)("a",{parentName:"p",href:"https://github.com/paritytech/xcm-format"},"xcm-format")," \u5e93\u3002"),(0,i.kt)("h2",{id:"how-to-make-cross-chain-transfers"},"How To Make Cross Chain Transfers"),(0,i.kt)("p",null,"You can try out cross-chain transfers on the the ",(0,i.kt)("a",{parentName:"p",href:"build-parachains-rococo"},"Rococo")," testnet. A tutorial on downward, upward, and lateral transfers can be found ",(0,i.kt)("a",{parentName:"p",href:"build-parachains-rococo#how-to-make-cross-chain-transfers"},"here"),"."),(0,i.kt)("h2",{id:"high-level-xcmp"},"High Level XCMP"),(0,i.kt)("p",null,"A smart contract that exists on parachain A will route a message to parachain B in which another smart contract is called that makes a transfer of some assets within that chain."),(0,i.kt)("p",null,"Charlie executes the smart contract on parachain A, which initiates a new cross-chain message for the destination of a smart contract on parachain B."),(0,i.kt)("p",null,"The collator node of parachain A will place this new cross-chain message into its outbound messages queue, along with a ",(0,i.kt)("inlineCode",{parentName:"p"},"destination")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"timestamp"),"."),(0,i.kt)("p",null,"The collator node of parachain B routinely pings all other collator nodes asking for new messages (filtering by the ",(0,i.kt)("inlineCode",{parentName:"p"},"destination")," field). When the collator of parachain B makes its next ping, it will see this new message on parachain A and add it into its own inbound queue for processing into the next block."),(0,i.kt)("p",null,"Validators for parachain A will also read the outbound queue and know the message. Validators for parachain B will do the same. This is so that they will be able to verify the message transmission happened."),(0,i.kt)("p",null,"When the collator of parachain B is building the next block in its chain, it will process the new message in its inbound queue as well as any other messages it may have found/received."),(0,i.kt)("p",null,"During processing, the message will execute the smart contract on parachain B and complete the asset transfer like intended."),(0,i.kt)("p",null,"The collator now hands this block to the validator, which itself will verify that this message was processed. If the message was processed and all other aspects of the block are valid, the validator will include this block for parachain B into the Relay Chain."),(0,i.kt)("p",null,"Check out our animated video below that explores how XCMP works."),(0,i.kt)("video",{controls:"controls",name:"XCMP Animated Video",width:"560",height:"315",src:"https://storage.googleapis.com/w3f-tech-ed-contents/XCMP.mp4"}," \u62b1\u6b49\uff0c\u60a8\u7684\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u5d4c\u5165\u5f0f\u89c6\u9891\u3002 "),(0,i.kt)("h2",{id:"resources"},"Resources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://research.web3.foundation/en/latest/polkadot/XCMP.html"},"XCMP \u65b9\u6848")," - Web3 \u57fa\u91d1\u4f1a\u7814\u7a76\u7ef4\u57fa\u4e0a\u7684\u8de8\u94fe\u901a\u4fe1\u7684\u5b8c\u6574\u6280\u672f\u63cf\u8ff0\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://w3f.github.io/parachain-implementers-guide/messaging.html"},"\u6d88\u606f\u4f20\u9012\u6982\u8ff0")," - \u4e00\u4efd\u6765\u81ea\u5e73\u884c\u94fe\u5f00\u53d1\u8005\u6307\u5357\u4e2d\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6848\u6982\u8ff0\u3002"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/paritytech/xcm-format"},"XCM\u683c\u5f0f")," - XCMP \u683c\u5f0f\u7684\u8bf4\u660e\u3002")))}h.isMDXComponent=!0}}]);